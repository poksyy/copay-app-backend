{
	"info": {
		"_postman_id": "9ebc6f9d-583b-44a0-9fcd-9e0c096d6e85",
		"name": "Copay",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38870768",
		"_collection_link": "https://copay4.postman.co/workspace/My-Workspace~5cc07cc6-03c8-4ab2-8d8b-dbe59281e26b/collection/38870768-9ebc6f9d-583b-44a0-9fcd-9e0c096d6e85?action=share&source=collection_link&creator=38870768"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register Step One",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"Dynavy\",\r\n    \"email\": \"test@hotmail.com\",\r\n    \"password\": \"Test12345\",\r\n    \"confirmPassword\": \"Test12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/register/step-one",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"register",
								"step-one"
							]
						},
						"description": "### **REGISTER - STEP ONE**\n\n`POST http://localhost:8080/api/auth/register/step-one`\n\nThis is the **first step** of the user registration process.\n\nIt registers the user with a **username, email, and password**, and returns a **token valid for 5 minutes**.\n\nThe token is **exclusively used** in the **Register Step Two** endpoint to complete the registration by adding the user's phone number.\n\nThe token is generated with the user's email set as the subject.\n\nUsing this token in any other endpoint will result in a **security error**.\n\nAfter using this token to successfully create an account, the temporal token is going to expire even if the 5 minutes didn't pass.\n\n### REQUEST BODY\n\n- `username` (string): Desired username for the user.\n    \n- `email` (string): Desired email for the user.\n    \n- `password` (string): Desired password for the user.\n    \n- `confirmationPassword` (string): Must match the password.\n    \n\n### **Responses**\n\n| Status Code | Description | Example case |\n| --- | --- | --- |\n| 200 OK | Registration step one completed, token returned | Valid username, email, and matching passwords |\n| 400 Bad Request | Invalid email format | Email doesn't match standard email patterns |\n| 400 Bad Request | Password and confirmPassword do not match | `password` and `confirmPassword` differ |\n| 409 Conflict | Email already exists | Email is already registered in the system |"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"Dynavy\",\r\n    \"email\": \"test@hotmail.com\",\r\n    \"password\": \"Test12345\",\r\n    \"confirmPassword\": \"Test12345\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/auth/register/step-one",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"auth",
										"register",
										"step-one"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 27 May 2025 21:02:41 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"token\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZXN0QGhvdG1haWwuY29tIiwicmVnaXN0ZXIiOnRydWUsImlhdCI6MTc0ODM3OTc2MSwiZXhwIjoxNzQ4MzgwMDYxfQ.X0PR0myzmq3FudrtSlMlFphNiqbyJysxwqchdI6TE32JXJ_JWp1cSv-2GCF67nIsOGIL2DpeQqDW0XFrczSWww\",\n    \"expiresIn\": 300,\n    \"username\": \"Dynavy\",\n    \"email\": \"test@hotmail.com\"\n}"
						},
						{
							"name": "400 Bad request (Invalid email format)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"Dynavy\",\r\n    \"email\": \"testhotmail.com\",\r\n    \"password\": \"Test12345\",\r\n    \"confirmPassword\": \"Test12345\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/auth/register/step-one",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"auth",
										"register",
										"step-one"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 27 May 2025 21:03:07 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        \"email: Invalid email format\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
						},
						{
							"name": "400 Bad request (Passwords doesn't match)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"Dynavy\",\r\n    \"email\": \"test@hotmail.com\",\r\n    \"password\": \"Test12345\",\r\n    \"confirmPassword\": \"Test12s345\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/auth/register/step-one",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"auth",
										"register",
										"step-one"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 27 May 2025 21:03:34 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        \"passwordsMatching: Passwords must match\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
						},
						{
							"name": "409 Conflict (Email already exists)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"Dynavy\",\r\n    \"email\": \"dynavy@hotmail.com\",\r\n    \"password\": \"Test12345\",\r\n    \"confirmPassword\": \"Test12345\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/auth/register/step-one",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"auth",
										"register",
										"step-one"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 27 May 2025 21:02:17 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        \"Email dynavy@hotmail.com already exists\"\n    ],\n    \"message\": \"Email already in use. Please enter a different one.\",\n    \"status\": 409\n}"
						}
					]
				},
				{
					"name": "Register Step Two",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZXN0c0Bob3RtYWlsLmNvbSIsInJlZ2lzdGVyIjp0cnVlLCJpYXQiOjE3NDgzODA1MTgsImV4cCI6MTc0ODM4MDgxOH0.oND4hhhFbgPQokNhFFlXhFgYzVdoyc3wmuhCa5KdXUzWxGiBYvu3zhUMtbHhP15jBbxbbY7hvFxoGe782tRMOg",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"phonePrefix\": \"+34\",\r\n    \"phoneNumber\": \"616689085\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/register/step-two",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"register",
								"step-two"
							]
						},
						"description": "### **REGISTER - STEP TWO**\n\n`POST http://localhost:8080/api/auth/register/step-two`\n\nThis is the **second step** of the user registration process.\n\nIt is used to **complete the account creation** by adding the **user’s phone prefix and phone number**.\n\nThe system uses the **temporary 5-minute token** generated in **Register Step One** to identify the email associated with the account and bind the phone number.\n\nOnce this step completes successfully, the system returns a **new token valid for 1 hour** (just like the login), using the **user's phone number** as the token subject.\n\nThis token is required to access any authenticated endpoints in the system.\n\n### Request body\n\n- `phonePrefix` (number): The user's phone prefix.\n    \n- `phoneNumber` (string): The user's desired phone number.\n    \n\n### **Responses**\n\n| Status Code | Description | Example case |\n| --- | --- | --- |\n| 200 OK | Phone number registered and 1-hour token returned | Valid phone and valid temporary token |\n| 400 Bad Request | Phone number validations failed (invalid format, size, etc.) | Phone number too short/long or wrong characters |\n| 401 Unauthorized | Temporary token expired or already used | Token is older than 5 minutes or reused |\n| 409 Conflict | Phone number already exists | A user with the same phone number already exists |"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phonePrefix\": \"+34\",\r\n    \"phoneNumber\": \"6126689085\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/auth/register/step-two",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"auth",
										"register",
										"step-two"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 27 May 2025 21:12:14 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"token\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTI2Njg5MDg1IiwiaWF0IjoxNzQ4MzgwMzM0LCJleHAiOjE3NDgzODM5MzR9.-JZN-_9hJiid-OoHj3Wv8m93obgNWgZ4h8LGsdLEbDoY1FbUhoRAuAuMBeniqGJFLDR0aLB8zj8Liu5lUCUR5g\",\n    \"expiresIn\": 3600,\n    \"userId\": 33,\n    \"username\": \"Dynavy\",\n    \"phoneNumber\": \"6126689085\",\n    \"email\": \"test@hotmail.com\"\n}"
						},
						{
							"name": "401 Unauthorized (After a 200 OK, the temporal token automatically expires)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "/*\r\n * This error can occur either if the 5-minute token validity period has expired,\r\n * or if the user account was already successfully created and received a 200 OK response,\r\n * since the token becomes invalid after successful registration.\r\n */\r\n\r\n{\r\n    \"phonePrefix\": \"+34\",\r\n    \"phoneNumber\": \"6126689085\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/auth/register/step-two",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"auth",
										"register",
										"step-two"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=ISO-8859-1"
								},
								{
									"key": "Content-Length",
									"value": "130"
								},
								{
									"key": "Date",
									"value": "Tue, 27 May 2025 21:12:24 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"exception\": \"InvalidTokenException\",\n    \"message\": \"Registration token has expired, please start the process again\",\n    \"status\": 401\n}"
						},
						{
							"name": "400 Bad request (Phone number validation)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phonePrefix\": \"+34\",\r\n    \"phoneNumber\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/auth/register/step-two",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"auth",
										"register",
										"step-two"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 27 May 2025 21:15:29 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        \"phoneNumber: Phone number must not be null\",\n        \"phoneNumber: Phone number must be between 6 and 15 digits\",\n        \"phoneNumber: Phone number must contain only digits\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
						},
						{
							"name": "409 Conflict (Phone number already exists)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phonePrefix\": \"+34\",\r\n    \"phoneNumber\": \"616689085\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/auth/register/step-two",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"auth",
										"register",
										"step-two"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 27 May 2025 21:12:01 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        \"Phone number 616689085 already exists\"\n    ],\n    \"message\": \"Phone number already in use. Please enter a different one.\",\n    \"status\": 409\n}"
						}
					]
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"phoneNumber\": \"616689085\",\r\n    \"password\": \"Test12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "### **LOGIN (AUTHENTICATION)**\n\n`POST http://localhost:8080/api/auth/login`\n\nThis endpoint is responsible for authenticating a user using their phone number and password.\n\nIf the credentials are valid, it returns a **JWT token** valid for **1 hour**, which is required to access secured endpoints across the application.\n\nThis token is generated with the phoneNumber of the user as the subject\n\n### REQUEST BODY\n\n- `phoneNumber` (number): The user's registered phone number\n    \n- `password` (string): The user's registered password.\n    \n\n### **Responses**\n\n| Status Code | Description | Example case |\n| --- | --- | --- |\n| 200 OK | Login successful, JWT token returned | Valid phone number and password |\n| 400 Bad Request | Invalid phone number format | Phone number is not valid (e.g. too short) |\n| 400 Bad Request | Password is null or missing | The `password` field is not provided |\n| 401 Unauthorized | Incorrect credentials | Phone number exists but password is wrong |\n| 404 Not Found | User not found | No user found with the given phone number |"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phoneNumber\": \"616689085\",\r\n    \"password\": \"Test12345\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 27 May 2025 20:59:42 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"token\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgzNzk1ODIsImV4cCI6MTc0ODM4MzE4Mn0.b-pVOL5aRThUBhMFweZE43npeppG2LKArstM4OdeVWOkFmNxfaBXOGu4Qrx_uzg4su6Pi8k1G74VnOka78t_Fw\",\n    \"expiresIn\": 3600,\n    \"userId\": 27,\n    \"username\": \"Dynavy\",\n    \"phonePrefix\": \"+34\",\n    \"phoneNumber\": \"616689085\",\n    \"email\": \"dynavy@hotmail.com\",\n    \"isLogin\": \"true\"\n}"
						},
						{
							"name": "401 Unauthorized (Invalid password)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phoneNumber\": \"616689085\",\r\n    \"password\": \"wrongpassword\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 27 May 2025 20:58:57 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        \"Invalid password\"\n    ],\n    \"message\": \"Current password is incorrect.\",\n    \"status\": 401\n}"
						},
						{
							"name": "404 Bad request (Phone number validations)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phoneNumber\": \"\",\r\n    \"password\": \"Test12345\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 27 May 2025 20:57:32 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        \"phoneNumber: Phone number must contain only digits\",\n        \"phoneNumber: Phone number must not be null\",\n        \"phoneNumber: Phone number must be between 6 and 15 digits\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
						},
						{
							"name": "404 Bad request (Password validations)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phoneNumber\": \"616689085\",\r\n    \"password\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 27 May 2025 20:57:57 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        \"password: Password must not be null\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
						}
					]
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgzNzk1ODIsImV4cCI6MTc0ODM4MzE4Mn0.b-pVOL5aRThUBhMFweZE43npeppG2LKArstM4OdeVWOkFmNxfaBXOGu4Qrx_uzg4su6Pi8k174VnOka78t_Fw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/auth/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"logout"
							]
						},
						"description": "### **LOGOUT**\n\n`POST http://localhost:8080/api/auth/logout`\n\n  \nThis endpoint is used to **log a user out** by **revoking their authentication token**.  \n  \nWhen a user makes a logout request, the token they used for authentication is **stored in the revoked tokens table** in the database, ensuring it cannot be reused even if it has not yet expired.\n\n### **Responses**\n\n| Status Code | Description |\n| --- | --- |\n| 200 OK | Logout successful. Token has been revoked. |\n| 401 Unauthorized | Invalid token format or bad signature (e.g., malformed, expired, tampered) |\n| 401 Unauthorized | Token has already been logged out (already exists in the revoked tokens DB) |"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/auth/logout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"auth",
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 27 May 2025 21:21:25 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Logout successful.\"\n}"
						},
						{
							"name": "401 Unauthorized (When you logout twice)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/auth/logout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"auth",
										"logout"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=ISO-8859-1"
								},
								{
									"key": "Content-Length",
									"value": "98"
								},
								{
									"key": "Date",
									"value": "Tue, 27 May 2025 21:22:53 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"exception\": \"InvalidTokenException\",\n    \"message\": \"Session was already terminated\",\n    \"status\": 401\n}"
						},
						{
							"name": "401 Unauthorized (Invalid token)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/auth/logout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"auth",
										"logout"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=ISO-8859-1"
								},
								{
									"key": "Content-Length",
									"value": "145"
								},
								{
									"key": "Date",
									"value": "Tue, 27 May 2025 21:25:35 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"exception\": \"InvalidTokenException\",\n    \"message\": \"Invalid token - Possibly malformed, invalid signature, or unsupported format.\",\n    \"status\": 401\n}"
						}
					]
				}
			]
		},
		{
			"name": "CRUD",
			"item": [
				{
					"name": "User",
					"item": [
						{
							"name": "Get All Users",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgyODIyMzMsImV4cCI6MTc0ODI4NTgzM30.i6X39ebQaMjPl5Rh1ApUdlRPUDn1OTs4hnxVfppD_xdOFPjMoDvMalGfm5WWh94z3UpYIXKAfwQ3B8xNU3U27g",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/users",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"users"
									]
								},
								"description": "### **GET ALL USERS**\n\n`http://localhost:8080/api/users`\n\nThis endpoint retrieves a complete list of users registered in the system.\n\nIt returns an array of user objects in JSON format.\n\n### **Users retrieval information**\n\nEach user object in the response will contain the following fields:\n\n- `id` (number): The unique identifier of the user.\n    \n- `username` (string): The username of the user.\n    \n- `email` (string): The user's email address.\n    \n- `phonePrefix` (string): The phone prefix associated with the user.\n    \n- `phoneNumber` (string): The phone number of the user.\n    \n\n### **Responses**\n\n| Status Code | Description | Example case (Postman) |\n| --- | --- | --- |\n| 200 OK | Users retrieved successfully | Full user list returned as JSON array |"
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 18:36:48 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": 1,\n        \"username\": \"NewName\",\n        \"email\": \"newemail@gmail.com\",\n        \"phonePrefix\": \"+34\",\n        \"phoneNumber\": \"61787261\"\n    },\n    {\n        \"id\": 2,\n        \"username\": \"Pau\",\n        \"email\": \"poksy@gmail.com\",\n        \"phonePrefix\": \"+34\",\n        \"phoneNumber\": \"603696141\"\n    },\n    {\n        \"id\": 3,\n        \"username\": \"cjy\",\n        \"email\": \"cj@example.com\",\n        \"phonePrefix\": \"+34\",\n        \"phoneNumber\": \"604395537\"\n    },\n    {\n        \"id\": 4,\n        \"username\": \"Cristian2\",\n        \"email\": \"cristian2@example.com\",\n        \"phonePrefix\": null,\n        \"phoneNumber\": \"604395532\"\n    },\n    {\n        \"id\": 5,\n        \"username\": \"Cristian3\",\n        \"email\": \"cristian3@example.com\",\n        \"phonePrefix\": null,\n        \"phoneNumber\": \"604395533\"\n    },\n    {\n        \"id\": 6,\n        \"username\": \"Jofre\",\n        \"email\": \"jofre@gmail.com\",\n        \"phonePrefix\": \"+34\",\n        \"phoneNumber\": \"616689089\"\n    },\n    {\n        \"id\": 8,\n        \"username\": \"Katherynn\",\n        \"email\": \"kath@gmail.com\",\n        \"phonePrefix\": \"+34\",\n        \"phoneNumber\": \"648805835\"\n    },\n    {\n        \"id\": 11,\n        \"username\": \"Dynavy\",\n        \"email\": \"navarrovinyarta.dylan3@hotmail.com\",\n        \"phonePrefix\": \"+34\",\n        \"phoneNumber\": \"616689082\"\n    },\n    {\n        \"id\": 12,\n        \"username\": \"Pau Carrera Nonales\",\n        \"email\": \"poksy2002@gmail.com\",\n        \"phonePrefix\": \"+34\",\n        \"phoneNumber\": \"767627133\"\n    },\n    {\n        \"id\": 13,\n        \"username\": \"Cristian4\",\n        \"email\": \"cristian4@gmail.com\",\n        \"phonePrefix\": \"+34\",\n        \"phoneNumber\": \"604395535\"\n    },\n    {\n        \"id\": 16,\n        \"username\": \"CristianCopay\",\n        \"email\": \"cristiancopay@gmail.com\",\n        \"phonePrefix\": \"+34\",\n        \"phoneNumber\": \"604395536\"\n    },\n    {\n        \"id\": 17,\n        \"username\": \"Test\",\n        \"email\": \"test@gmail.com\",\n        \"phonePrefix\": null,\n        \"phoneNumber\": \"616689081\"\n    },\n    {\n        \"id\": 18,\n        \"username\": \"TestUser\",\n        \"email\": \"testuser@gmail.com\",\n        \"phonePrefix\": \"+34\",\n        \"phoneNumber\": \"616689080\"\n    },\n    {\n        \"id\": 19,\n        \"username\": \"TestUser\",\n        \"email\": \"testuser1@gmail.com\",\n        \"phonePrefix\": \"+34\",\n        \"phoneNumber\": \"626689085\"\n    },\n    {\n        \"id\": 20,\n        \"username\": \"TestUser\",\n        \"email\": \"Teuser@gmail.com\",\n        \"phonePrefix\": \"+34\",\n        \"phoneNumber\": \"617689085\"\n    },\n    {\n        \"id\": 22,\n        \"username\": \"Dynavy\",\n        \"email\": \"dynavy@hotmail.com\",\n        \"phonePrefix\": \"+34\",\n        \"phoneNumber\": \"616689085\"\n    }\n]"
								}
							]
						},
						{
							"name": "Get User by userid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgyODY3NDEsImV4cCI6MTc0ODI5MDM0MX0.qYTL4N-J3Pq2Pae_ZPSZC2UaA-zo_jVe1JdA4vSNZbmYbJEBhGrX-qUhvMpgAmqvs1apa-Xh9N1fwmQDeLNrZw",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/users/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"users",
										"2"
									]
								},
								"description": "## GET USERS BY USER ID ENDPOINT\n\n[http://localhost:8080/api/users](http://localhost:8080/api/users)\n\nThis endpoint retrieves user information based on the provided user ID.\n\n### Response\n\nThe response will be in JSON format and will contain the following fields:\n\n- `id` (number): The unique identifier of the user.\n    \n- `username` (string): The username of the user.\n    \n- `email` (string): The email address of the user.\n    \n- `phonePrefix` (string): The phone number prefix of the user.\n    \n- `phoneNumber` (string): The phone number of the user.\n    \n\n### Responses\n\n| Status Code | Description | Example Case (Postman) |\n| --- | --- | --- |\n| 200 OK | User ID retrieval successful | Request with valid ID returns user data |\n| 400 Bad Request | Invalid or missing path variable or validation failure | ID is not a number or violates validation |\n| 401 Unauthorized | Authentication token is missing or invalid | Missing or invalid `Authorization` header |\n| 404 Not Found | No user found with the specified ID | User with ID `9999` does not exist |\n\nEndFragment"
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/users/10",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"10"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:27:23 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"username\": \"Dylan\",\n    \"email\": \"dynavy@hotmail.com\",\n    \"phonePrefix\": \"+34\",\n    \"phoneNumber\": \"616689085\"\n}"
								},
								{
									"name": "400 Bad request (Invalid endpoint input)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/users/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"1"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:32:26 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date"
										}
									],
									"body": "{\n    \"errors\": [\n        \"Invalid value '\\\"\\\"' for 'id'. Expected a 'Long'. Please check the endpoint and try again.\"\n    ],\n    \"message\": \"Invalid endpoint input detected. Ensure the parameter is correct and matches the expected format.\",\n    \"status\": 400\n}"
								},
								{
									"name": "401 Unauthorized (Invalid token provided)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"TestUser\",\r\n    \"email\" : \"\",\r\n    \"password\" : \"Test12345\",\r\n    \"phonePrefix\" : \"+34\",\r\n    \"phoneNumber\" : \"616689085\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=ISO-8859-1"
										},
										{
											"key": "Content-Length",
											"value": "145"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:14:26 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"exception\": \"InvalidTokenException\",\n    \"message\": \"Invalid token - Possibly malformed, invalid signature, or unsupported format.\",\n    \"status\": 401\n}"
								},
								{
									"name": "404 Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/users/111",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"111"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:39:23 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"User with ID 111 not found.\"\n    ],\n    \"message\": \"User does not exist.\",\n    \"status\": 404\n}"
								}
							]
						},
						{
							"name": "Get Users by phonenumber",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgyNzk3NDksImV4cCI6MTc0ODI4MzM0OX0.qcHp6MtmcL0EVUMnYyrpIYKfrn75kMsDzMj9q1BkIsnmhL77zmGbBWEZ3P9p-sQBu2-Zl8lrfKR7YS7D3FZ8tQ",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/users/phone/616689085",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"users",
										"phone",
										"616689085"
									]
								},
								"description": "## GET USERS BY PHONE NUMBER\n\n[http://localhost:8080/api/users/phone/<br>](http://localhost:8080/api/users)\n\nThis endpoint retrieves user information based on the provided phone number.\n\n**Response**\n\nThe response will be in JSON format and will contain the following fields:\n\n- `id` (number): The unique identifier of the user.\n    \n- `username` (string): The username of the user.\n    \n- `email` (string): The email address of the user.\n    \n- `phonePrefix` (string): The phone number prefix of the user.\n    \n- `phoneNumber` (string): The phone number of the user.\n    \n\n**Responses**\n\n| Status Code | Description | Example case (Postman) |\n| --- | --- | --- |\n| 200 OK | User phone number retrieval | User with phone number found and returned |\n| 400 Bad Request | Missing or invalid phone number format | Phone number is empty or contains invalid characters |\n| 401 Unauthorized | Authentication token is missing or invalid | 401 Unauthorized - Invalid token provided |\n| 404 Not Found | No user found with the specified phone number | 404 Not Found - Phone number not associated with user |\n\nEndFragment"
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/users/phone/6166890852",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"phone",
												"6166890852"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:40:14 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"username\": \"Dylan\",\n    \"email\": \"dynavy@hotmail.com\",\n    \"phonePrefix\": \"+34\",\n    \"phoneNumber\": \"616689085\"\n}"
								},
								{
									"name": "400 Bad request (Invalid phone number)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/users/phone/\"\"",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"phone",
												"\"\""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:43:58 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"phoneNumber: Phone number must be between 6 and 15 digits\",\n        \"phoneNumber: Phone number must contain only digits\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
								},
								{
									"name": "401 Unauthorized (Invalid token provided)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"TestUser\",\r\n    \"email\" : \"\",\r\n    \"password\" : \"Test12345\",\r\n    \"phonePrefix\" : \"+34\",\r\n    \"phoneNumber\" : \"616689085\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=ISO-8859-1"
										},
										{
											"key": "Content-Length",
											"value": "145"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:14:26 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"exception\": \"InvalidTokenException\",\n    \"message\": \"Invalid token - Possibly malformed, invalid signature, or unsupported format.\",\n    \"status\": 401\n}"
								},
								{
									"name": "404 Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/users/phone/6166890852",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"phone",
												"6166890852"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:40:45 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"User with phone 6166890852 not found.\"\n    ],\n    \"message\": \"User does not exist.\",\n    \"status\": 404\n}"
								}
							]
						},
						{
							"name": "Create User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgzNjkwMDgsImV4cCI6MTc0ODM3MjYwOH0.p_CYIuQ95iZcj9T9gcBVUzySvq0zuAphKMtiO-xAOSOmlt6jwnJcZjT4f9EPM8ka5dd_uTBVceiyT6Ui0gIwtg",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\" : \"TestUser\",\r\n    \"email\" : \"Teuser@gmail.com\",\r\n    \"password\" : \"Test12345\",\r\n    \"phonePrefix\" : \"+34\",\r\n    \"phoneNumber\" : \"617689085\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/users",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"users"
									]
								},
								"description": "## CREATE USER ENDPOINT\n\n[http://localhost:8080/api/users](http://localhost:8080/api/usersEndFragment)\n\nThis endpoint allows the creation of a new user.\n\n### Request Body\n\n- `username` (string, required): The username of the user.\n    \n- `email` (string, required): The email address of the user.\n    \n- `password` (string, required): The password for the user account.\n    \n- `phonePrefix` (string, required): The prefix of the user phone number.\n    \n- `phoneNumber` (string, required): The phone number of the user.\n    \n\n### Responses\n\n| Status Code | Description | Example case (Postman) |\n| --- | --- | --- |\n| `201 Created` | User successfully created | `201 Created - User registered` |\n| `400 Bad Request` | Missing or invalid fields in request body | `400 Bad Request - Empty email field` |\n| `401 Unauthorized` | Authentication token is missing or invalid | `401 Unauthorized - Invalid token provided` |\n| `409 Conflict` | User with the given email/phone already exists | `409 Conflict - Email or phone already in use` |\n| `422 Unprocessable Entity` | Data format is valid but semantically incorrect | `422 Unprocessable Entity - Invalid phone format` |\n| `500 Internal Server Error` | Unexpected error on the server side | `500 Internal Server Error - DB connection` |"
							},
							"response": [
								{
									"name": "201 Created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"TestUser\",\r\n    \"email\" : \"Teuser@gmail.com\",\r\n    \"password\" : \"Test12345\",\r\n    \"phonePrefix\" : \"+34\",\r\n    \"phoneNumber\" : \"617689085\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:37:41 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 20,\n    \"username\": \"TestUser\",\n    \"email\": \"Teuser@gmail.com\",\n    \"phonePrefix\": \"+34\",\n    \"phoneNumber\": \"617689085\"\n}"
								},
								{
									"name": "400 Bad request (Invalid digits and size)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"TestUser\",\r\n    \"email\" : \"Testuser@gmail.com\",\r\n    \"password\" : \"Test12345\",\r\n    \"phonePrefix\" : \"+34\",\r\n    \"phoneNumber\" : \"61asdsadasddasd6689085\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:35:43 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"phoneNumber: Phone number must contain only digits\",\n        \"phoneNumber: Phone number must be between 6 and 15 digits\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
								},
								{
									"name": "400 Bad request (Invalid email format)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"TestUser\",\r\n    \"email\" : \"Testusergmail.com\",\r\n    \"password\" : \"Test12345\",\r\n    \"phonePrefix\" : \"+34\",\r\n    \"phoneNumber\" : \"616689085\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:34:40 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"email: Invalid email format\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
								},
								{
									"name": "400 Bad request (empty fields)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"TestUser\",\r\n    \"email\" : \"\",\r\n    \"password\" : \"Test12345\",\r\n    \"phonePrefix\" : \"+34\",\r\n    \"phoneNumber\" : \"616689085\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:13:29 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"email: Email must not be null\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
								},
								{
									"name": "409 Conflict (email already in use)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"TestUser\",\r\n    \"email\" : \"testuser@gmail.com\",\r\n    \"password\" : \"Test12345\",\r\n    \"phonePrefix\" : \"+34\",\r\n    \"phoneNumber\" : \"6166890285\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:12:18 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Email 'testuser@gmail.com' is already in use.\"\n    ],\n    \"message\": \"Email already in use. Please enter a different one.\",\n    \"status\": 409\n}"
								},
								{
									"name": "409 Conflict (phone already in use)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"TestUser\",\r\n    \"email\" : \"testsuser@gmail.com\",\r\n    \"password\" : \"Test12345\",\r\n    \"phonePrefix\" : \"+34\",\r\n    \"phoneNumber\" : \"616689085\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:13:02 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Phone number '616689085' is already in use.\"\n    ],\n    \"message\": \"Phone number already in use. Please enter a different one.\",\n    \"status\": 409\n}"
								},
								{
									"name": "409 Conflict (both email and phone already in use)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"TestUser\",\r\n    \"email\" : \"testuser@gmail.com\",\r\n    \"password\" : \"Test12345\",\r\n    \"phonePrefix\" : \"+34\",\r\n    \"phoneNumber\" : \"616689085\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:11:36 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Both phone number '616689085' and email 'testuser@gmail.com' are already in use.\"\n    ],\n    \"message\": \"Phone number and email already exist.\",\n    \"status\": 409\n}"
								},
								{
									"name": "422 Unprocessable Entity 1",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"TestUser\",\r\n    \"email\" : \"testuser@gmail.com\",\r\n    \"password\" : \"Test12345\",\r\n    \"phonePrefix\" : \"+34\",\r\n    // Mandatory field of the JSON is missing\r\n    \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:02:09 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"There was an issue with the request format. Please check for unrecognized fields or incorrect JSON structure.\"\n    ],\n    \"message\": \"Invalid data format or unrecognized field in request\",\n    \"status\": 422\n}"
								},
								{
									"name": "422 Unprocessable Entity 2",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"usernameasd\" : \"TestUser\",  // JSON field is incorrectly written\r\n    \"email\" : \"testuser@gmail.com\",\r\n    \"password\" : \"Test12345\",\r\n    \"phonePrefix\" : \"+34\",\r\n    \"phoneNumber\" : \"616689080\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:02:36 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date"
										}
									],
									"body": "{\n    \"errors\": [\n        \"Invalid field: 'usernameasd'. Please remove or correct it.\"\n    ],\n    \"message\": \"Invalid data format or unrecognized field in request\",\n    \"status\": 422\n}"
								}
							]
						},
						{
							"name": "Update User by Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgyODIyMzMsImV4cCI6MTc0ODI4NTgzM30.i6X39ebQaMjPl5Rh1ApUdlRPUDn1OTs4hnxVfppD_xdOFPjMoDvMalGfm5WWh94z3UpYIXKAfwQ3B8xNU3U27g",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\" : \"Dylan\",\r\n    \"email\" : \"dynavy@hotmail.com\",\r\n    \"password\" : \"Test12345\",\r\n    \"phoneNumber\" : \"696689085\"\r\n}\r\n\r\n/* \r\n * This endpoint is designed for administrative or backoffice use.\r\n * As such, it does not enforce that the user making the request matches the token's identity.\r\n * \r\n * This endpoint is not exposed in the frontend.\r\n * Regular users interact with the application through the following endpoints:\r\n * @PutMapping(\"/reset-password\")\r\n * @PutMapping(\"/edit-username/{id}\")\r\n * @PutMapping(\"/edit-email/{id}\")\r\n * @PutMapping(\"/edit-phone/{id}\")\r\n */",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/users/29",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"users",
										"29"
									]
								},
								"description": "### UPDATE USER BY USER ID\n\n[http://localhost:8080/api/users<br>](https://Http://localhost:8080/api/users/3EndFragment)\n\nThis endpoint allows updating user details by sending an HTTP PUT request to the specified URL.\n\n**⚠️ This is a backoffice-oriented endpoint. It is intended for administrative/internal use only and is not exposed in the frontend application.**\n\n### **Request Body**\n\n- `username` (string): The new username for the user.\n    \n- `email` (string): The new email address for the user.\n    \n- `password` (string): The new password for the user.\n    \n- `phoneNumber` (string): The new phone number for the user.\n    \n\n### Response\n\n| Status Code | Description | Example case (Postman) |\n| --- | --- | --- |\n| 200 OK | User updated successfully | User data was valid and changes were saved |\n| 400 Bad Request | Invalid input format or wrong endpoint used | Invalid value for `id` in path or malformed JSON |\n| 404 Not Found | User with the specified ID does not exist | Tried to update a user that doesn't exist |\n| 409 Conflict | Email or phone number already in use by another user | Phone or email already taken |\n| 500 Internal Server Error | Token not refreshed and phone number is updated twice without re-authentication | User updated phone twice without refreshing token |"
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"NewName\",\r\n    \"email\" : \"newemail@gmail.com\",\r\n    \"password\" : \"Nwepassword12345\",\r\n    \"phoneNumber\" : \"61787261\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"1"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:50:29 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"username\": \"NewName\",\n    \"email\": \"newemail@gmail.com\",\n    \"phonePrefix\": \"+34\",\n    \"phoneNumber\": \"61787261\"\n}"
								},
								{
									"name": "400 Bad request (Invalid endpoint input) Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/users/\"\"",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"\"\""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:32:26 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Invalid value '\\\"\\\"' for 'id'. Expected a 'Long'. Please check the endpoint and try again.\"\n    ],\n    \"message\": \"Invalid endpoint input detected. Ensure the parameter is correct and matches the expected format.\",\n    \"status\": 400\n}"
								},
								{
									"name": "404 Not found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"Dylan\",\r\n    \"email\" : \"dynavy@hotmail.com\",\r\n    \"password\" : \"Test12345\",\r\n    \"phoneNumber\" : \"696689085\"\r\n}\r\n\r\n/* \r\n * This endpoint is designed for administrative or backoffice use.\r\n * As such, it does not enforce that the user making the request matches the token's identity.\r\n * \r\n * This endpoint is not exposed in the frontend.\r\n * Regular users interact with the application through the following endpoints:\r\n * @PutMapping(\"/reset-password\")\r\n * @PutMapping(\"/edit-username/{id}\")\r\n * @PutMapping(\"/edit-email/{id}\")\r\n * @PutMapping(\"/edit-phone/{id}\")\r\n */",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/29",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"29"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 18:27:25 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"User with ID 29 not found.\"\n    ],\n    \"message\": \"User does not exist.\",\n    \"status\": 404\n}"
								},
								{
									"name": "409 Conflict (both email and phone number already in use)",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"Dylan\",\r\n    \"email\" : \"dynavsy@hotmail.com\",\r\n    \"password\" : \"Test12345\",\r\n    \"phoneNumber\" : \"616689085\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"3"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 18:08:52 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Both phone number '616689085' and email 'dynavy@hotmail.com' are already in use.\"\n    ],\n    \"message\": \"Phone number and email already exist.\",\n    \"status\": 409\n}"
								},
								{
									"name": "409 Conflict (Phone number already exists)",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"Dylan\",\r\n    \"email\" : \"dynavys@hotmail.com\",\r\n    \"password\" : \"Test12345\",\r\n    \"phoneNumber\" : \"616689085\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"3"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 18:15:53 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Phone number '616689085' is already in use.\"\n    ],\n    \"message\": \"Phone number already in use. Please enter a different one.\",\n    \"status\": 409\n}"
								},
								{
									"name": "409 Conflict (email already in use)",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"Dylan\",\r\n    \"email\" : \"dynavy@hotmail.com\",\r\n    \"password\" : \"Test12345\",\r\n    \"phoneNumber\" : \"696689085\"\r\n}\r\n\r\n/* \r\n * This endpoint is designed for administrative or backoffice use.\r\n * As such, it does not enforce that the user making the request matches the token's identity.\r\n * \r\n * This endpoint is not exposed in the frontend.\r\n * Regular users interact with the application through the following endpoints:\r\n * @PutMapping(\"/reset-password\")\r\n * @PutMapping(\"/edit-username/{id}\")\r\n * @PutMapping(\"/edit-email/{id}\")\r\n * @PutMapping(\"/edit-phone/{id}\")\r\n */",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"3"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 18:19:20 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Email 'dynavy@hotmail.com' is already in use.\"\n    ],\n    \"message\": \"Email already in use. Please enter a different one.\",\n    \"status\": 409\n}"
								},
								{
									"name": "500 Error (Updating again without refreshing token)",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"NewName\",\r\n    \"email\" : \"newemail@gmail.com\",\r\n    \"password\" : \"password12345\",\r\n    \"phoneNumber\" : \"61787261\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"1"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=ISO-8859-1"
										},
										{
											"key": "Content-Length",
											"value": "168"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 17:51:14 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"location\": \"JwtAuthenticationFilter try-catch block\",\n    \"error\": \"Internal Server error, try again later\",\n    \"message\": \"Phone token identifier not found\",\n    \"status\": 500\n}\n\n/* Note: The token's primary identifier is the phone number.\n * If you update your phone number twice in a row using POSTMAN without refreshing the token,\n * an error will occur because the phone number stored in the token no longer matches the current one.\n *\n * We are aware that this should not return a 500 Internal Server Error.\n * A more appropriate status code will be implemented in future revisions.\n */"
								}
							]
						},
						{
							"name": "Update username by userId",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgyOTgyMDQsImV4cCI6MTc0ODMwMTgwNH0.Ul0-MpPYSybWFq3sVcpnyb8Bpmd5ATUt8GylPK1z6kcUCSlflBFi2bZj8FsobyJKh8gdipi1t3R2qQR-7E5SAA",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\" : \"\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/users/edit-username/22",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"users",
										"edit-username",
										"22"
									]
								},
								"description": "StartFragment\n\n### **UPDATE USERNAME BY USER ID**\n\n`http://localhost:8080/api/users/edit-username`\n\nThis endpoint allows updating only the `username` of a specific user by their user ID. The operation is restricted to the user themselves and enforced via token-based authentication.\n\n### **Request Body**\n\n- `username` (string): The new username for the user.\n    \n\n### **Responses**\n\n| Status Code | Description | Example case (Postman) |\n| --- | --- | --- |\n| 200 OK | Username updated successfully | A valid username was provided and saved |\n| 400 Bad Request | Invalid email format (if present in payload by mistake) | Sent an email field in incorrect format |\n| 400 Bad Request | Invalid input in endpoint | Malformed ID or incorrect request format |\n| 400 Bad Request | Username must not be null or must meet length constraints | Sent `\"username\": null` or too short/long |\n| 403 Forbidden | User is not authorized to update another user’s username | Authenticated token belongs to a different user ID |\n| 404 Not Found | No user found with the given ID | Provided user ID does not exist in the system |"
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"NewNameTest\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/edit-username/22",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"edit-username",
												"22"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 22:39:05 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"userId\": 22,\n    \"username\": \"NewNameTest\"\n}"
								},
								{
									"name": "400 Bad Request (Invalid endpoint input)",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"NewNameTest\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/edit-username/\"",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"edit-username",
												"\""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 22:24:01 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Invalid value '\\\"' for 'id'. Expected a 'Long'. Please check the endpoint and try again.\"\n    ],\n    \"message\": \"Invalid endpoint input detected. Ensure the parameter is correct and matches the expected format.\",\n    \"status\": 400\n}"
								},
								{
									"name": "400 Bad request (Invalid size and null exception)",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/edit-username/22",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"edit-username",
												"22"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 22:40:39 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"username: Username must not be null\",\n        \"username: Username must be between 3 and 15 characters\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
								},
								{
									"name": "403 Forbidden (No permissions to update)",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"NewNameTest\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/edit-username/19",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"edit-username",
												"19"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 22:38:32 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Unauthorized access: phone number from token (616689085) does not match user phone number (626689085).\"\n    ],\n    \"message\": \"You can only update your own account information.\",\n    \"status\": 403\n}"
								},
								{
									"name": "404 Not found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\" : \"NewNameTest\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/edit-username/9",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"edit-username",
												"9"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 22:23:41 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"User with ID 9 not found.\"\n    ],\n    \"message\": \"User does not exist.\",\n    \"status\": 404\n}"
								}
							]
						},
						{
							"name": "Update email by userId",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgyOTgyMDQsImV4cCI6MTc0ODMwMTgwNH0.Ul0-MpPYSybWFq3sVcpnyb8Bpmd5ATUt8GylPK1z6kcUCSlflBFi2bZj8FsobyJKh8gdipi1t3R2qQR-7E5SAA",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\" : \"emailtest@example.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/users/edit-email/22",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"users",
										"edit-email",
										"22"
									]
								},
								"description": "### **UPDATE USER EMAIL BY USER ID**\n\n`http://localhost:8080/api/users/edit-email`\n\nThis endpoint allows updating the email address of a specific user by providing the new email in the request body. The operation is restricted to the authenticated user and verified using token-based permissions.\n\n### **Request Body**\n\n- `email` (string): The new email address to assign to the user. _(Must be a valid format and not null)_\n    \n\n### **Responses**\n\n| Status Code | Description | Example case (Postman) |\n| --- | --- | --- |\n| 200 OK | Email updated successfully | A valid and unique email was provided and saved |\n| 400 Bad Request | Invalid email format | Sent an improperly formatted email like `\"email\": \"not-an-email\"` |\n| 400 Bad Request | Invalid input in endpoint | Malformed ID or incorrect request format |\n| 400 Bad Request | Email must not be null | Sent `\"email\": null` |\n| 403 Forbidden | User is not authorized to update another user’s email | Authenticated token does not match the target user ID |\n| 404 Not Found | No user found with the given ID | Provided user ID does not exist in the system |\n| 409 Conflict | Email already exists in the system | Tried to update the email to one that’s already in use by another account |"
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\" : \"emailtest@example.com\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/edit-email/22",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"edit-email",
												"22"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 22:43:02 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"userId\": 22,\n    \"email\": \"emailtest@example.com\"\n}"
								},
								{
									"name": "400 Bad request (Invalid email format)",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\" : \"emailtestexample.com\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/edit-email/22",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"edit-email",
												"22"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 22:43:20 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"email: Invalid email format\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
								},
								{
									"name": "400 Bad request (Invalid endpoint input)",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\" : \"emailtest@example.com\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/edit-email/\"",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"edit-email",
												"\""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 22:42:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Invalid value '\\\"' for 'id'. Expected a 'Long'. Please check the endpoint and try again.\"\n    ],\n    \"message\": \"Invalid endpoint input detected. Ensure the parameter is correct and matches the expected format.\",\n    \"status\": 400\n}"
								},
								{
									"name": "400 Bad request (Email must not be null)",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\" : \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/edit-email/22",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"edit-email",
												"22"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 22:43:29 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"email: Email must not be null\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
								},
								{
									"name": "403 Forbidden (No permissions to update)",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\" : \"emailtest@example.com\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/edit-email/2",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"edit-email",
												"2"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 22:41:53 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Unauthorized access: phone number from token (616689085) does not match user phone number (603696141).\"\n    ],\n    \"message\": \"You can only update your own account information.\",\n    \"status\": 403\n}"
								},
								{
									"name": "404 Not found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\" : \"emailtest@example.com\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/edit-email/21",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"edit-email",
												"21"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 22:42:39 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"User with ID 21 not found.\"\n    ],\n    \"message\": \"User does not exist.\",\n    \"status\": 404\n}"
								},
								{
									"name": "409 Conflict (Email already exists)",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\" : \"pau.carrera@gmail.com\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/edit-email/22",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"edit-email",
												"22"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 22:57:21 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Email pau.carrera@gmail.com already exists\"\n    ],\n    \"message\": \"Email already in use. Please enter a different one.\",\n    \"status\": 409\n}"
								}
							]
						},
						{
							"name": "Update phone by userId",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgzMDA0ODYsImV4cCI6MTc0ODMwNDA4Nn0.2_MzKfWvJGQK2of8QRrtFVmSIZ6fHTTvP04o8-6SyQMKsKzOT5sU9KA1L_gWs7MqKAg3cYUZXquRWrz9mg1TBw",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phoneNumber\" : \"18726387123127836921\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/users/edit-phone/22",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"users",
										"edit-phone",
										"22"
									]
								},
								"description": "StartFragment\n\n### **UPDATE USER PHONE BY USER ID**\n\n`http://localhost:8080/api/users/edit-phone/`\n\nThis endpoint allows updating the phone number of a specific user by providing the new number in the request body. The request is authenticated, and users can only modify their own profile based on their token.\n\n### **Request Body**\n\n- `phoneNumber` (string): The new phone number to assign to the user.\n    \n\n### **Responses**\n\n| Status Code | Description | Example case (Postman) |\n| --- | --- | --- |\n| 200 OK | Phone number updated successfully | Phone number was valid, unique, and the token matched the user's ID |\n| 400 Bad Request | Invalid size for phone number | Sent a phone number that is too short or too long |\n| 400 Bad Request | Invalid input in endpoint | Malformed user ID or incorrectly formatted JSON |\n| 403 Forbidden | User not authorized to update this profile | Token belongs to a different user than the one in the request |\n| 409 Conflict | Phone number already exists in the system | Tried to update the number to one already assigned to another user |\n| 500 Internal Server Error | Token not refreshed and user updated phone twice without re-authentication | Performed the phone update again without refreshing the token, which tracks the phone |"
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"phoneNumber\" : \"6116689080\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/edit-phone/22",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"edit-phone",
												"22"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 22:57:40 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"userId\": 22,\n    \"phoneNumber\": \"6116689080\"\n}"
								},
								{
									"name": "400 Bad request (Invalid size)",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"phoneNumber\" : \"18726387123127836921\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/edit-phone/22",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"edit-phone",
												"22"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 23:01:45 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"phoneNumber: Phone number must be between 6 and 15 digits\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
								},
								{
									"name": "400 Bad request (Phone number must not be null)",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"phoneNumber\" : \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/edit-phone/22",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"edit-phone",
												"22"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 22:59:45 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"phoneNumber: Phone number must not be null\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
								},
								{
									"name": "400 Bad request (Invalid endpoint input)",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"phoneNumber\" : \"604395537\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/edit-phone/\"",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"edit-phone",
												"\""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 22:59:16 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Invalid value '\\\"' for 'id'. Expected a 'Long'. Please check the endpoint and try again.\"\n    ],\n    \"message\": \"Invalid endpoint input detected. Ensure the parameter is correct and matches the expected format.\",\n    \"status\": 400\n}"
								},
								{
									"name": "403 Forbidden (No permissions to update)",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"phoneNumber\" : \"616689080\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/edit-phone/2",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"edit-phone",
												"2"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 22:56:05 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Unauthorized access: phone number from token (616689085) does not match user phone number (603696141).\"\n    ],\n    \"message\": \"You can only update your own account information.\",\n    \"status\": 403\n}"
								},
								{
									"name": "409 Conflict (Phone already exists)",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"phoneNumber\" : \"616689080\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/edit-phone/22",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"edit-phone",
												"22"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 22:56:30 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Phone number 616689080 already exists\"\n    ],\n    \"message\": \"Phone number already in use. Please enter a different one.\",\n    \"status\": 409\n}"
								},
								{
									"name": "500 Error (Updating again without refreshing token)",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"phoneNumber\" : \"6116689080\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/users/edit-phone/\"",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"edit-phone",
												"\""
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=ISO-8859-1"
										},
										{
											"key": "Content-Length",
											"value": "168"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 22:57:54 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"location\": \"JwtAuthenticationFilter try-catch block\",\n    \"error\": \"Internal Server error, try again later\",\n    \"message\": \"Phone token identifier not found\",\n    \"status\": 500\n}\n\n/* Note: The token's primary identifier is the phone number.\n * If you update your phone number twice in a row using POSTMAN without refreshing the token,\n * an error will occur because the phone number stored in the token no longer matches the current one.\n *\n * We are aware that this should not return a 500 Internal Server Error.\n * A more appropriate status code will be implemented in future revisions.\n */"
								}
							]
						},
						{
							"name": "Delete User by userid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgyODIyMzMsImV4cCI6MTc0ODI4NTgzM30.i6X39ebQaMjPl5Rh1ApUdlRPUDn1OTs4hnxVfppD_xdOFPjMoDvMalGfm5WWh94z3UpYIXKAfwQ3B8xNU3U27g",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/users/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"users",
										"2"
									]
								},
								"description": "### **DELETE USER BY USER ID**\n\n`http://localhost:8080/api/users`\n\nThis endpoint allows the deletion of a user by their ID.  \n  \nThe request must include the `userId` as a query parameter or in the body depending on the implementation.\n\n### **Request Parameters**\n\n- `userId` (number): The unique identifier of the user to delete.  \n    \n\n### **Responses**\n\n| Status Code | Description | Example case (Postman) |\n| --- | --- | --- |\n| 200 OK | User deleted successfully | User with given ID was found and deleted |\n| 400 Bad Request | Malformed request or missing user ID | ID was null or improperly passed |\n| 404 Not Found | User with the specified ID does not exist | Tried to delete a user that doesn't exist |"
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/users/\"",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"\""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 18:30:33 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Your account has been deleted successfully.\"\n}"
								},
								{
									"name": "400 Bad request (Invalid endpoint input)",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/users/\"",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"\""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 18:32:14 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Invalid value '\\\"' for 'id'. Expected a 'Long'. Please check the endpoint and try again.\"\n    ],\n    \"message\": \"Invalid endpoint input detected. Ensure the parameter is correct and matches the expected format.\",\n    \"status\": 400\n}"
								},
								{
									"name": "404 Not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/users/8",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"users",
												"8"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 18:28:26 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"User with ID 77 not found.\"\n    ],\n    \"message\": \"User does not exist.\",\n    \"status\": 404\n}"
								}
							]
						}
					]
				},
				{
					"name": "Groups",
					"item": [
						{
							"name": "Get Group by groupId",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgzNTc1MjUsImV4cCI6MTc0ODM2MTEyNX0.4yuy6B8u5fEBbxp-gB4Z1a03b2VaWXwkTRLTBqMPEcFTW_mM8m5Pc8bp6oBmTDp_RSZ1puF3m2N2UVKJA1a6sw",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/groups/{groupId}/group",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"groups",
										"{groupId}",
										"group"
									]
								},
								"description": "### **GET GROUP BY GROUP ID**\n\n`http://localhost:8080/api/groups/{groupId}`\n\nRetrieves full details of a specific group by its unique identifier.  \n  \nAccess is restricted to users who are members or the owner of the group.  \n  \nStartFragment\n\n### **Path Variable**\n\n- `groupId` (number): The unique ID of the group to be retrieved.\n    \n\nStartFragment\n\n### **Group retrieval information**\n\nEach group object in the response will contain the following fields:\n\n- `groupId` (number): The unique identifier of the group.\n    \n- `name` (string): The name of the group.\n    \n- `description` (string): The description of the group.\n    \n- `estimatedPrice` (number): The estimated price associated with the group.\n    \n- `currency` (string): The currency used (e.g., \"EUR\").\n    \n- `createdAt` (string): Timestamp of when the group was created (format: `yyyy-MM-dd HH:mm:ss`).\n    \n- `userIsOwner` (boolean): Indicates if the user performing the request is the owner of the group.\n    \n\n##### **Creditor object**\n\n- `creditorId` (number): The unique identifier of the creditor user.\n    \n- `creditorName` (string): The username of the creditor.\n    \n\n##### **Group owner object**\n\n- `ownerId` (number): The unique identifier of the owner.\n    \n- `ownerName` (string): The username of the group owner.\n    \n\n##### **Registered members**\n\nA list of registered users in the group. Each member object contains:\n\n- `registeredMemberId` (number): The ID of the registered member.\n    \n- `username` (string): The member's username.\n    \n- `phoneNumber` (string): The member's phone number.\n    \n\n##### **External members**\n\nA list of external members added manually. Each object may contain only:\n\n- `externalMemberId` (number): The ID of the external member.\n    \n- `name` (string): The name of the external member.\n    \n\n### **Responses**\n\n| Status Code | Description | Example case |\n| --- | --- | --- |\n| 200 OK | Group information successfully retrieved | The user is authorized (member or owner) |\n| 400 Bad Request | Invalid input or malformed endpoint | `groupId` is not a number |\n| 403 Forbidden | Access denied | User is neither a member nor the group creator |\n| 404 Not Found | Group not found | No group exists with the specified `groupId` |"
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/groups/2/group",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"2",
												"group"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 14:52:15 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"groupId\": 2,\n    \"name\": \"group0009\",\n    \"description\": \"\",\n    \"estimatedPrice\": 100,\n    \"creditor\": {\n        \"creditorId\": 5,\n        \"creditorName\": \"Cristian3\"\n    },\n    \"currency\": \"EUR\",\n    \"createdAt\": \"2025-05-25 00:10:22\",\n    \"userIsOwner\": true,\n    \"groupOwner\": {\n        \"ownerId\": 5,\n        \"ownerName\": \"Cristian3\"\n    },\n    \"registeredMembers\": [\n        {\n            \"registeredMemberId\": 5,\n            \"username\": \"Cristian3\",\n            \"phoneNumber\": \"604395533\"\n        }\n    ],\n    \"externalMembers\": []\n}"
								},
								{
									"name": "404 Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/groups/222/group",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"222",
												"group"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 14:53:01 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Group with ID 222 not found\"\n    ],\n    \"message\": \"Specified group doesn't exist.\",\n    \"status\": 404\n}"
								},
								{
									"name": "400 Bad request (Invalid endpoint input)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/groups/\"/group",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"\"",
												"group"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 14:53:11 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Invalid value '\\\"' for 'groupId'. Expected a 'Long'. Please check the endpoint and try again.\"\n    ],\n    \"message\": \"Invalid endpoint input detected. Ensure the parameter is correct and matches the expected format.\",\n    \"status\": 400\n}"
								},
								{
									"name": "403 Forbidden (No permissions to fetch group data)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/groups/18/group",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"18",
												"group"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 15:09:44 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Access denied: user with ID 27 is neither the group creator nor a registered member of group ID 18\"\n    ],\n    \"message\": \"You don't have access to this group\",\n    \"status\": 403\n}"
								}
							]
						},
						{
							"name": "Get Group by user id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgyODY3NDEsImV4cCI6MTc0ODI5MDM0MX0.qYTL4N-J3Pq2Pae_ZPSZC2UaA-zo_jVe1JdA4vSNZbmYbJEBhGrX-qUhvMpgAmqvs1apa-Xh9N1fwmQDeLNrZw",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/groups/19",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"groups",
										"19"
									]
								},
								"description": "### **GET GROUP BY USER ID**\n\n`http://localhost:8080/api/groups/1`\n\nThis endpoint retrieves all groups in which a specific user is a member, based on the provided user ID in the path.\n\n### **Path Parameter**\n\n- `1` (number): The user ID used to filter and return the associated groups.\n    \n\n### **Responses**\n\n| Status Code | Description | Example case (Postman) |\n| --- | --- | --- |\n| 200 OK | Groups successfully retrieved for the given user | User is a member of at least one group |\n| 204 No Content | The user is not a member of any group | Valid user ID but no associated groups |\n| 400 Bad Request | Invalid input format or wrong endpoint used | Non-numeric ID or malformed path parameter |\n| 404 Not Found | User ID provided in the endpoint does not exist | No user found with the given ID |"
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"1"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 19:22:24 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"groups\": [\n        {\n            \"groupId\": 7,\n            \"name\": \"Test\",\n            \"description\": \"asdasd\",\n            \"estimatedPrice\": 100,\n            \"creditor\": {\n                \"creditorId\": 2,\n                \"creditorName\": \"Pau\"\n            },\n            \"currency\": \"EUR\",\n            \"createdAt\": \"2025-05-25 12:54:05\",\n            \"userIsOwner\": true,\n            \"groupOwner\": {\n                \"ownerId\": 1,\n                \"ownerName\": \"NewName\"\n            },\n            \"registeredMembers\": [\n                {\n                    \"registeredMemberId\": 1,\n                    \"username\": \"NewName\",\n                    \"phoneNumber\": \"61787261\"\n                }\n            ],\n            \"externalMembers\": [\n                {\n                    \"externalMembersId\": 10,\n                    \"name\": \"Patatas\"\n                },\n                {\n                    \"externalMembersId\": 9,\n                    \"name\": \"Jamon\"\n                },\n                {\n                    \"externalMembersId\": 8,\n                    \"name\": \"Pepito\"\n                }\n            ]\n        },\n        {\n            \"groupId\": 11,\n            \"name\": \"Paco\",\n            \"description\": \"paquito\",\n            \"estimatedPrice\": 50,\n            \"creditor\": {\n                \"creditorId\": 12,\n                \"creditorName\": \"Pau Carrera Nonales\"\n            },\n            \"currency\": \"EUR\",\n            \"createdAt\": \"2025-05-26 12:32:44\",\n            \"userIsOwner\": false,\n            \"groupOwner\": {\n                \"ownerId\": 12,\n                \"ownerName\": \"Pau Carrera Nonales\"\n            },\n            \"registeredMembers\": [\n                {\n                    \"registeredMemberId\": 12,\n                    \"username\": \"Pau Carrera Nonales\",\n                    \"phoneNumber\": \"767627133\"\n                },\n                {\n                    \"registeredMemberId\": 1,\n                    \"username\": \"NewName\",\n                    \"phoneNumber\": \"61787261\"\n                }\n            ],\n            \"externalMembers\": [\n                {\n                    \"externalMembersId\": 16,\n                    \"name\": \"asdasd\"\n                }\n            ]\n        }\n    ]\n}"
								},
								{
									"name": "204 No content (No groups found for this user)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/19",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"19"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 19:36:09 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": null
								},
								{
									"name": "400 Bad request (Invalid endpoint input)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/\"",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"\""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 19:22:42 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Invalid value '\\\"' for 'userId'. Expected a 'Long'. Please check the endpoint and try again.\"\n    ],\n    \"message\": \"Invalid endpoint input detected. Ensure the parameter is correct and matches the expected format.\",\n    \"status\": 400\n}"
								},
								{
									"name": "404 Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/123",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"123"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 19:30:01 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"User with ID 123 not found.\"\n    ],\n    \"message\": \"User does not exist.\",\n    \"status\": 404\n}"
								}
							]
						},
						{
							"name": "List Group members by group id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgyODkwNjQsImV4cCI6MTc0ODI5MjY2NH0.fy8OYFg4DnPsND1-4WBPbKdUHkuVlDho802ve5Xrc2CdKnR5zF8Is89q6vUZHl7KZ3yKQnfPNICoPTbjJ_DEdw",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/groups/2/members",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"groups",
										"2",
										"members"
									]
								}
							},
							"response": [
								{
									"name": "200 OK (Without externalMembers)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/groups/2/members",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"2",
												"members"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 19:54:07 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"externalMembers\": [],\n    \"registeredMembers\": [\n        {\n            \"registeredMemberId\": 3,\n            \"username\": \"cjy\",\n            \"phoneNumber\": \"604395537\"\n        },\n        {\n            \"registeredMemberId\": 4,\n            \"username\": \"Cristian2\",\n            \"phoneNumber\": \"604395532\"\n        },\n        {\n            \"registeredMemberId\": 5,\n            \"username\": \"Cristian3\",\n            \"phoneNumber\": \"604395533\"\n        }\n    ]\n}"
								},
								{
									"name": "200 OK (With external and registered members)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/groups/8/members",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"8",
												"members"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 19:54:37 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"externalMembers\": [\n        {\n            \"externalMembersId\": 12,\n            \"name\": \"Cristian\"\n        },\n        {\n            \"externalMembersId\": 13,\n            \"name\": \"Dylan\"\n        },\n        {\n            \"externalMembersId\": 11,\n            \"name\": \"Pau\"\n        }\n    ],\n    \"registeredMembers\": [\n        {\n            \"registeredMemberId\": 4,\n            \"username\": \"Cristian2\",\n            \"phoneNumber\": \"604395532\"\n        },\n        {\n            \"registeredMemberId\": 5,\n            \"username\": \"Cristian3\",\n            \"phoneNumber\": \"604395533\"\n        },\n        {\n            \"registeredMemberId\": 3,\n            \"username\": \"cjy\",\n            \"phoneNumber\": \"604395537\"\n        }\n    ]\n}"
								},
								{
									"name": "400 Bad request (Invalid endpoint input)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/groups/\"/members",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"\"",
												"members"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 19:54:54 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Invalid value '\\\"' for 'groupId'. Expected a 'Long'. Please check the endpoint and try again.\"\n    ],\n    \"message\": \"Invalid endpoint input detected. Ensure the parameter is correct and matches the expected format.\",\n    \"status\": 400\n}"
								},
								{
									"name": "404 Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/groups/123/members",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"123",
												"members"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 19:53:47 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Group with ID 123 not found.\"\n    ],\n    \"message\": \"Specified group doesn't exist.\",\n    \"status\": 404\n}"
								}
							]
						},
						{
							"name": "Create group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgzNzU5MTUsImV4cCI6MTc0ODM3OTUxNX0.tnTvyvYlmG-RpTlplQY05eC4bCYqTL2bKoArETdmF9jSp5oSEDNZh7bBVhPv2EfU7nRpS1r5Y2kxFdgShudUNQ",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"createdBy\": 27,\r\n  \"name\": \"Test\",\r\n  \"description\": \"This can be null\",\r\n  \"estimatedPrice\": 100,\r\n  \"currency\": \"EUR\",\r\n  \"invitedRegisteredMembers\": [\r\n    { \"phoneNumber\": \"616689080\", \"creditor\": false },\r\n      { \"phoneNumber\": \"6209659869\", \"creditor\": false }\r\n  ],\r\n  \"invitedExternalMembers\": [\r\n    { \"name\": \"Test1\", \"creditor\": true },\r\n    { \"name\": \"Test2\", \"creditor\": false },\r\n    { \"name\": \"Test3\", \"creditor\": false }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/groups",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"groups"
									]
								},
								"description": "### **CREATE GROUP ENDPOINT**\n\n`http://localhost:8080/api/groups`\n\nThis endpoint allows creating a new group by sending a valid HTTP POST request with the required data.\n\n### **Request Body**\n\n- `createdBy` (number): ID of the user who creates the group.\n    \n- `name` (string): The name of the group.\n    \n- `description` (string, optional): Additional details about the group (can be null).\n    \n- `estimatedPrice` (number): The estimated cost of the group activity.\n    \n- `currency` (string): The currency used, e.g., \"EUR\".\n    \n- `invitedRegisteredMembers` (array): List of registered users invited to the group. Each object contains:\n    \n    - `phoneNumber` (string): The phone number of the invited user.\n        \n    - `creditor` (boolean): Indicates if the user is a creditor.\n        \n- `invitedExternalMembers` (array): List of unregistered users invited to the group. Each object contains:\n    \n    - `name` (string): Name of the external user.\n        \n    - `creditor` (boolean): Indicates the creditor user (the one who paid).\n        \n\n### **Responses**\n\n| Status Code | Description | Example case (Postman) |\n| --- | --- | --- |\n| 201 Created | Group created successfully | Valid data provided and group is stored |\n| 400 Bad Request | Invalid or missing fields in the request body | Missing `name`, invalid `estimatedPrice`, malformed JSON |\n| 400 Bad Request | A payer must be selected | No member marked as `creditor: true` |\n| 401 Unauthorized | Authentication token is missing or expired | Token expired after 1 hour |\n| 403 Forbidden | User is not allowed to create a group for another user | `createdBy` does not match authenticated user |\n| 404 Not Found | Provided phone number does not match any registered user | One or more `invitedRegisteredMembers.phoneNumber` not found |"
							},
							"response": [
								{
									"name": "201 Created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"createdBy\": 22,\r\n  \"name\": \"Test\",\r\n  \"description\": \"This can be null\",\r\n  \"estimatedPrice\": 100,\r\n  \"currency\": \"EUR\",\r\n  \"invitedRegisteredMembers\": [\r\n    { \"phoneNumber\": \"616689080\", \"creditor\": true },\r\n    { \"phoneNumber\": \"617689085\", \"creditor\": false }\r\n  ],\r\n  \"invitedExternalMembers\": [\r\n    { \"name\": \"Test1\", \"creditor\": false },\r\n    { \"name\": \"Test2\", \"creditor\": false },\r\n    { \"name\": \"Test3\", \"creditor\": false }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 19:07:17 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"groupId\": 18,\n    \"name\": \"Test\",\n    \"description\": \"This can be null\",\n    \"estimatedPrice\": 100,\n    \"creditor\": {\n        \"creditorId\": 18,\n        \"creditorName\": \"TestUser\"\n    },\n    \"currency\": \"EUR\",\n    \"createdAt\": \"2025-05-26 21:07:15\",\n    \"userIsOwner\": true,\n    \"groupOwner\": {\n        \"ownerId\": 22,\n        \"ownerName\": \"Dynavy\"\n    },\n    \"registeredMembers\": [\n        {\n            \"registeredMemberId\": 18,\n            \"username\": \"TestUser\",\n            \"phoneNumber\": \"616689080\"\n        },\n        {\n            \"registeredMemberId\": 20,\n            \"username\": \"TestUser\",\n            \"phoneNumber\": \"617689085\"\n        }\n    ],\n    \"externalMembers\": [\n        {\n            \"externalMembersId\": 31,\n            \"name\": \"Test3\"\n        },\n        {\n            \"externalMembersId\": 29,\n            \"name\": \"Test2\"\n        },\n        {\n            \"externalMembersId\": 30,\n            \"name\": \"Test1\"\n        }\n    ]\n}"
								},
								{
									"name": "400 Bad request (Invalid inputs)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"createdBy\": 22,\r\n  \"name\": \"\",\r\n  \"description\": \"This can be null\",\r\n  \"estimatedPrice\": -8,\r\n  \"currency\": \"EUR\",\r\n  \"invitedRegisteredMembers\": [\r\n    { \"phoneNumber\": \"616689080\", \"creditor\": true },\r\n    { \"phoneNumber\": \"67689085\", \"creditor\": false }\r\n  ],\r\n  \"invitedExternalMembers\": [\r\n    { \"name\": \"Test1\", \"creditor\": false },\r\n    { \"name\": \"Test2\", \"creditor\": false },\r\n    { \"name\": \"Test3\", \"creditor\": false }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 19:17:01 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"name: Group name must not be null\",\n        \"estimatedPrice: Estimated price must be greater than or equal to 0\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
								},
								{
									"name": "401 Unauthorized (The 1 hour token expired)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"createdBy\": 22,\r\n  \"name\": \"Test\",\r\n  \"description\": \"This can be null\",\r\n  \"estimatedPrice\": 100,\r\n  \"currency\": \"EUR\",\r\n  \"invitedRegisteredMembers\": [\r\n    { \"phoneNumber\": \"616689080\", \"creditor\": false },\r\n    { \"phoneNumber\": \"617689085\", \"creditor\": false }\r\n  ],\r\n  \"invitedExternalMembers\": [\r\n    { \"name\": \"Test1\", \"creditor\": false },\r\n    { \"name\": \"Test2\", \"creditor\": false },\r\n    { \"name\": \"Test3\", \"creditor\": false }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=ISO-8859-1"
										},
										{
											"key": "Content-Length",
											"value": "112"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 19:11:07 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"exception\": \"InvalidTokenException\",\n    \"message\": \"Your session has expired, please login again\",\n    \"status\": 401\n}"
								},
								{
									"name": "400 Bad Request (Payer must be selected)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"createdBy\": 22,\r\n  \"name\": \"Test\",\r\n  \"description\": \"This can be null\",\r\n  \"estimatedPrice\": 100,\r\n  \"currency\": \"EUR\",\r\n  \"invitedRegisteredMembers\": [\r\n    { \"phoneNumber\": \"616689080\", \"creditor\": false },\r\n    { \"phoneNumber\": \"617689085\", \"creditor\": false }\r\n  ],\r\n  \"invitedExternalMembers\": [\r\n    { \"name\": \"Test1\", \"creditor\": false },\r\n    { \"name\": \"Test2\", \"creditor\": false },\r\n    { \"name\": \"Test3\", \"creditor\": false }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 19:14:30 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Exactly one payer must be selected, either registered or external.\"\n    ],\n    \"message\": \"Exactly one payer must be selected to create a group, either registered or external.\",\n    \"status\": 400\n}"
								},
								{
									"name": "403 Forbidden (Wrong user creating a group)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"createdBy\": 1,\r\n  \"name\": \"Test\",\r\n  \"description\": \"This can be null\",\r\n  \"estimatedPrice\": 100,\r\n  \"currency\": \"EUR\",\r\n  \"invitedRegisteredMembers\": [\r\n    { \"phoneNumber\": \"616689080\", \"creditor\": true },\r\n    { \"phoneNumber\": \"617689085\", \"creditor\": false }\r\n  ],\r\n  \"invitedExternalMembers\": [\r\n    { \"name\": \"Test1\", \"creditor\": false },\r\n    { \"name\": \"Test2\", \"creditor\": false },\r\n    { \"name\": \"Test3\", \"creditor\": false }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 19:00:52 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"User with ID 22 is not authorized to create a group for user ID 1.\"\n    ],\n    \"message\": \"You are not authorized to create a group on behalf of another user.\",\n    \"status\": 403\n}\n\n/* This exception ensures that the authenticated user (from the token) can only create groups using their own user ID,\n * preventing them from creating a group on behalf of another user (even if for some reason the frontend sends a different ID). \n */"
								},
								{
									"name": "404 Not found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"createdBy\": 22,\r\n  \"name\": \"Test\",\r\n  \"description\": \"This can be null\",\r\n  \"estimatedPrice\": 100,\r\n  \"currency\": \"EUR\",\r\n  \"invitedRegisteredMembers\": [\r\n    { \"phoneNumber\": \"616689080\", \"creditor\": true },\r\n    { \"phoneNumber\": \"627689085\", \"creditor\": false }\r\n  ],\r\n  \"invitedExternalMembers\": [\r\n    { \"name\": \"Test1\", \"creditor\": false },\r\n    { \"name\": \"Test2\", \"creditor\": false },\r\n    { \"name\": \"Test3\", \"creditor\": false }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 19:16:11 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"This phone number owner doesn't have an account: 627689085\"\n    ],\n    \"message\": \"This phone number owner doesn't have an account: 627689085\",\n    \"status\": 404\n}"
								}
							]
						},
						{
							"name": "Update Group Description & Name by groupId",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgyODkwNjQsImV4cCI6MTc0ODI5MjY2NH0.fy8OYFg4DnPsND1-4WBPbKdUHkuVlDho802ve5Xrc2CdKnR5zF8Is89q6vUZHl7KZ3yKQnfPNICoPTbjJ_DEdw",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\" : \"\"\r\n}\r\n\r\n/*\r\nSince the backend logic for this endpoint uses reflection utilities,\r\nit's possible to update the name, the description, or both \r\ndepending on the fields included in the request body.\r\n*/",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/groups/3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"groups",
										"3"
									]
								},
								"description": "### **UPDATE GROUP DESCRIPTION & NAME BY GROUP ID**\n\n[http://localhost:8080/api/groups/](http://localhost:8080/api/groups/)\n\nThis endpoint allows updating the `name` and/or `description` of an existing group based on the provided group ID and payload.  \n  \nIt uses reflectionUtils (Java) to selectively update fields, so it supports updating either one or both attributes.  \nThis endpoint is restricted to authorized group owners.\n\n### **Responses**\n\n| Status Code | Description | Example case (Postman) |\n| --- | --- | --- |\n| 200 OK | Group name, description, or both updated successfully | Only name changed, only description changed, or both |\n| 400 Bad Request | Field 'name' must not be null | Sent `\"name\": null` |\n| 400 Bad Request | Field 'name' must not be longer than 25 characters | Sent `\"name\":` must be no longer than 25 characters |\n| 403 Forbidden | User does not have permission to update this group | Authenticated user is not the creator or admin of the group |\n| 404 Not Found | No group found with the provided ID | Sent `\"id\": 200`, which does not correspond to any group in the database |"
							},
							"response": [
								{
									"name": "200 OK (Updating both)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"NewName\",\r\n  \"description\" : \"NewDescription\"\r\n}\r\n\r\n/*\r\nSince the backend logic for this endpoint uses reflection utilities,\r\nit's possible to update the name, the description, or both \r\ndepending on the fields included in the request body.\r\n*/",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/20",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"20"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 19:59:17 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Group updated successfully.\"\n}"
								},
								{
									"name": "200 OK (Only updating name)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"NewName\"\r\n}\r\n\r\n/*\r\nSince the backend logic for this endpoint uses reflection utilities,\r\nit's possible to update the name, the description, or both \r\ndepending on the fields included in the request body.\r\n*/",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/20",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"20"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 19:58:09 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Group updated successfully.\"\n}"
								},
								{
									"name": "200 OK (Updating description)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"description\" : \"NewDescription2\"\r\n}\r\n\r\n/*\r\nSince the backend logic for this endpoint uses reflection utilities,\r\nit's possible to update the name, the description, or both \r\ndepending on the fields included in the request body.\r\n*/",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/20",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"20"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 19:59:57 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Group updated successfully.\"\n}"
								},
								{
									"name": "400 Bad request (Must not be null)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\" : \"\"\r\n}\r\n\r\n/*\r\nSince the backend logic for this endpoint uses reflection utilities,\r\nit's possible to update the name, the description, or both \r\ndepending on the fields included in the request body.\r\n*/",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/20",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"20"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 20:00:34 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Validation errors: Group name must not be null\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
								},
								{
									"name": "400 Bad request (Must not be longer than 25 characters)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\" : \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\r\n}\r\n\r\n/*\r\nSince the backend logic for this endpoint uses reflection utilities,\r\nit's possible to update the name, the description, or both \r\ndepending on the fields included in the request body.\r\n*/",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/20",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"20"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 20:01:18 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Validation errors: Group name must be no longer than 25 characters\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
								},
								{
									"name": "400 Bad request (Invalid endpoint input)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\" : \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\r\n}\r\n\r\n/*\r\nSince the backend logic for this endpoint uses reflection utilities,\r\nit's possible to update the name, the description, or both \r\ndepending on the fields included in the request body.\r\n*/",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/\"",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"\""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 20:06:58 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Invalid value '\\\"' for 'groupId'. Expected a 'Long'. Please check the endpoint and try again.\"\n    ],\n    \"message\": \"Invalid endpoint input detected. Ensure the parameter is correct and matches the expected format.\",\n    \"status\": 400\n}"
								},
								{
									"name": "403 Forbidden (No permissions to update)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\" : \"TestName\"\r\n}\r\n\r\n/*\r\nSince the backend logic for this endpoint uses reflection utilities,\r\nit's possible to update the name, the description, or both \r\ndepending on the fields included in the request body.\r\n*/",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/16",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"16"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 20:02:14 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"User 22 has no permissions on the group 16\"\n    ],\n    \"message\": \"Only the group creator is authorized to perform this action.\",\n    \"status\": 403\n}"
								},
								{
									"name": "404 Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"description\" : \"NewDescription2\"\r\n}\r\n\r\n/*\r\nSince the backend logic for this endpoint uses reflection utilities,\r\nit's possible to update the name, the description, or both \r\ndepending on the fields included in the request body.\r\n*/",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/200",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"200"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 20:00:15 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Group with ID 200 not found.\"\n    ],\n    \"message\": \"Specified group doesn't exist.\",\n    \"status\": 404\n}"
								}
							]
						},
						{
							"name": "Update Group Price by groupId",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgyODkwNjQsImV4cCI6MTc0ODI5MjY2NH0.fy8OYFg4DnPsND1-4WBPbKdUHkuVlDho802ve5Xrc2CdKnR5zF8Is89q6vUZHl7KZ3yKQnfPNICoPTbjJ_DEdw",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"estimatedPrice\": \"300\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/groups/200/estimatedprice",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"groups",
										"200",
										"estimatedprice"
									]
								},
								"description": "### **UPDATE ESTIMATED PRICE BY GROUP ID**\n\n`http://localhost:8080/api/groups/2/estimatedprice`\n\nThis endpoint allows updating the `estimatedPrice` of a group by its group ID. Only the group creator is authorized to perform this action.\n\n### **Responses**\n\n| Status Code | Description | Example case (Postman) |\n| --- | --- | --- |\n| 200 OK | Estimated price updated successfully | A valid positive price was provided |\n| 400 Bad Request | Estimated price must be a non-negative number | Sent `\"estimatedPrice\": -30.00` |\n| 400 Bad Request | Invalid input in endpoint | Malformed group ID or incorrect request format |\n| 403 Forbidden | User is not authorized to update the estimated price | Authenticated user is not the group creator |\n| 404 Not Found | No group found with the provided ID | Sent group ID does not exist in the database |"
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"estimatedPrice\": \"300\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/19/estimatedprice",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"19",
												"estimatedprice"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 20:08:17 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Estimated price updated and shares recalculated.\"\n}"
								},
								{
									"name": "400 Bad request (Estimated price can't be negative)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"estimatedPrice\": \"-300\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/2/estimatedprice",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"2",
												"estimatedprice"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 20:10:04 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"estimatedPrice: Estimated price must be greater than or equal to 0\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
								},
								{
									"name": "400 Bad request (Invalid endpoint input)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"estimatedPrice\": \"300\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/\"estimatedprice",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"\"estimatedprice"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 20:07:46 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Invalid value '\\\"estimatedprice' for 'groupId'. Expected a 'Long'. Please check the endpoint and try again.\"\n    ],\n    \"message\": \"Invalid endpoint input detected. Ensure the parameter is correct and matches the expected format.\",\n    \"status\": 400\n}"
								},
								{
									"name": "403 Forbidden (No permissions to update)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"estimatedPrice\": \"300\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/2/estimatedprice",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"2",
												"estimatedprice"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 20:08:57 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"User 22 has no permissions on the group 2\"\n    ],\n    \"message\": \"Only the group creator is authorized to perform this action.\",\n    \"status\": 403\n}"
								},
								{
									"name": "404 Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"estimatedPrice\": \"300\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/200/estimatedprice",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"200",
												"estimatedprice"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 26 May 2025 20:11:34 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Group with ID 200 not found.\"\n    ],\n    \"message\": \"Specified group doesn't exist.\",\n    \"status\": 404\n}"
								}
							]
						},
						{
							"name": "Update Group Registered Members",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgzNzI1NjAsImV4cCI6MTc0ODM3NjE2MH0.3bYMVrEBhtL-IhFpwrDcI_qXSQ_v7I0QcZYoSjbeet1BuYbBkhT1TbfqHfvaXdAyZEq-dhos31O1hc1Hs7JDHA",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "/* \r\n * Three cases are supported:\r\n * 1. Add: Include a phone number that is not currently in the group.\r\n * 2. Remove: Omit a phone number from the list to remove that member.\r\n * 3. Keep: Include the phone number again to retain the existing member.\r\n * Note: Excluding the group's creditor will result in a 400 Bad Request error.\r\n */\r\n\r\n{\r\n    \"invitedRegisteredMembers\": [\r\n        \"616689085\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/groups/48/registeredmembers",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"groups",
										"48",
										"registeredmembers"
									]
								},
								"description": "### **UPDATE GROUP REGISTERED MEMBERS**\n\n`http://localhost:8080/api/groups/26/registeredmembers`\n\nThis endpoint updates the list of registered members in a specific group by their phone numbers.\n\nIf a previously included member is **not** present in the request body, they will be **removed** from the group.\n\nTo **add** a new member, the body must send **all** existing members plus the new one in the request.\n\n### Request body\n\n- `invitedRegisteredMembers` (array of strings): List of phone numbers belonging to registered users you want to be part of the group.\n    \n\n### **Responses**\n\n| Status Code | Description | Example case (Postman) |\n| --- | --- | --- |\n| 200 OK | Registered members list updated successfully | Members were updated correctly according to the provided phone numbers |\n| 400 Bad Request | Invalid input in endpoint | Malformed group ID or invalid JSON format |\n| 400 Bad Request | Attempted to remove the group's creditor | Tried to exclude the user who originally created or pays for the group |\n| 400 Bad Request | Members list must not be blank | The `invitedRegisteredMembers` array was empty or missing |\n| 403 Forbidden | User is not authorized to modify this group's members | The token belongs to a user who is not the group creator |\n| 404 Not Found | A phone number provided in the body does not belong to any user | At least one phone number in the array is not linked to any existing user |\n| 404 Not Found | Group ID specified in the endpoint does not exist | The group with the given ID does not exist in the system |"
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"invitedRegisteredMembers\": [\r\n        \"616689085\", // New invited member through his phone number.\r\n        \"616689080\" // This is the creditor phone (whos is already in the group).\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/26/registeredmembers",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"26",
												"registeredmembers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 13:10:51 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Group members updated successfully.\"\n}"
								},
								{
									"name": "400 Bad request (Invalid endpoint input)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"invitedRegisteredMembers\": [\r\n        \"\"\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/\"/registeredmembers",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"\"",
												"registeredmembers"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 13:06:21 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Invalid value '\\\"' for 'groupId'. Expected a 'Long'. Please check the endpoint and try again.\"\n    ],\n    \"message\": \"Invalid endpoint input detected. Ensure the parameter is correct and matches the expected format.\",\n    \"status\": 400\n}"
								},
								{
									"name": "400 Bad request (Must not be blank)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"invitedRegisteredMembers\": [\r\n        \"\"\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/26/registeredmembers",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"26",
												"registeredmembers"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 13:15:40 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"invitedRegisteredMembers[0]: Each member must not be blank\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
								},
								{
									"name": "403 Forbidden (No permissions to create)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"invitedRegisteredMembers\": [\r\n        \"616689085\",\r\n        \"627162832\"\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/20/registeredmembers",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"20",
												"registeredmembers"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 13:07:07 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"User 27 has no permissions on the group 20\"\n    ],\n    \"message\": \"Only the group creator is authorized to perform this action.\",\n    \"status\": 403\n}"
								},
								{
									"name": "404 Not found (Phone number not found)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"invitedRegisteredMembers\": [\r\n        \"616689085\",\r\n        \"616689080\",\r\n        \"627162832\"\r\n\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/26/registeredmembers",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"26",
												"registeredmembers"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 13:10:35 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"User with phone 627162832 not found.\"\n    ],\n    \"message\": \"User does not exist.\",\n    \"status\": 404\n}"
								},
								{
									"name": "404 Not found (Group not found)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"invitedRegisteredMembers\": [\r\n        \"616689085\",\r\n        \"627162832\"\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/1/registeredmembers",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"1",
												"registeredmembers"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 13:06:55 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Group with ID 1 not found.\"\n    ],\n    \"message\": \"Specified group doesn't exist.\",\n    \"status\": 404\n}"
								},
								{
									"name": "400 Bad request (Can't remove the creditor of the group)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"invitedRegisteredMembers\": [\r\n        \"616689085\",\r\n        \"627162832\"\r\n       /* \"616689080\"  The creditor is getting removed from the group  */\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/26/registeredmembers",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"26",
												"registeredmembers"
											]
										}
									},
									"status": "Bad Request",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 13:08:29 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date"
										}
									],
									"body": "{\n    \"errors\": [\n        \"The creditor (616689080) can't be removed from the group.\"\n    ],\n    \"message\": \"You can't kick the creditor of the group.\",\n    \"status\": 409\n}\n\n/* This exception is triggered when the creditor (the user who finances the group) is not included in the 'invitedRegisteredMembers' list\n * Since the backend interprets omission as removal, excluding the creditor causes a 400 Bad Request.\n */"
								}
							]
						},
						{
							"name": "Update Group External Members",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgzNzQxMDgsImV4cCI6MTc0ODM3NzcwOH0.0FF_mEHAY5G71fifvBW8Wec6EvGks8ff5dd8I00CCNISG9eQ1f0iZ7yvkV5FbYIPDd1NC1h7sjQ08mb_XObrrA",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "/*\r\n * Four cases are supported:\r\n * 1. Update: Provide externalMembersId + new name → updates the name of an existing member.\r\n * 2. Add: Provide only name → creates a new member with a generated ID.\r\n * 3. Keep: Provide externalMembersId + current name → keeps the existing member unchanged.\r\n * 4. Remove: Omit the member from the list → removes them from the group.\r\n */\r\n\r\n{\r\n \"invitedExternalMembers\": [\r\n        {\r\n            \"externalMembersId\": \"47\",\r\n            \"name\": \"Test3\"\r\n        },\r\n        {\r\n            \"externalMembersId\": \"48\",\r\n            \"name\": \"Test2\"\r\n        },\r\n        {\r\n            \"externalMembersId\": \"49\",\r\n            \"name\": \"Test1\"\r\n        },\r\n        {\r\n            \"name\": \"NewUser\" // A new record will be created in the external_members table with this name.\r\n        }\r\n    ]\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/groups/52/externalmembers",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"groups",
										"52",
										"externalmembers"
									]
								},
								"description": "### **UPDATE GROUP EXTERNAL MEMBERS**\n\n`http://localhost:8080/api/groups/22/externalmembers`\n\nThis endpoint allows managing **external members** of a group.\n\nIt supports the following operations in a **single request**:\n\n### **Supported Operations**\n\n1. **Update**\n    \n    → Provide `externalMemberId` + new `name`\n    \n    → The member's name will be updated.\n    \n2. **Add**\n    \n    → Provide only `name`\n    \n    → A new external member will be created with a generated ID.\n    \n3. **Keep**\n    \n    → Provide `externalMemberId` + current `name`\n    \n    → No change is made to this member.\n    \n4. **Remove**\n    \n    → If a previously existing member is **not included** in the request, they will be **removed** from the group.\n    \n\n### Request body\n\n- `externalMemberId(optional):` ID of the external member. If provided, the backend will check if the member exists in the group or not,\n    \n- `name:` The name of the external member. Cannot be blank.\n    \n\n### **Responses**\n\n| Status Code | Description | Example case (Postman) |\n| --- | --- | --- |\n| 200 OK | External members updated successfully (includes updates, adds, or no changes) | All member changes were processed successfully |\n| 400 Bad Request | A name field is missing or blank | One of the objects has `\"\"` or null as name |\n| 400 Bad Request | Invalid input format or malformed endpoint | Wrong group ID format or invalid JSON |\n| 403 Forbidden | User is not authorized to manage this group's members | The token belongs to a user who is not the group creator |\n| 404 Not Found | One of the provided `externalMemberId` values does not exist | Trying to update or keep a member that is not part of the group |\n| 404 Not Found | The group ID in the endpoint does not exist | The specified group does not exist |"
							},
							"response": [
								{
									"name": "200 OK (Adding a new external member (NewUser))",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"invitedExternalMembers\": [\r\n        {\r\n            \"externalMembersId\": \"47\",\r\n            \"name\": \"Test3\"\r\n        },\r\n        {\r\n            \"externalMembersId\": \"48\",\r\n            \"name\": \"Test2\"\r\n        },\r\n        {\r\n            \"externalMembersId\": \"49\",\r\n            \"name\": \"Test1\"\r\n        },\r\n        {\r\n            \"name\": \"NewUser\" // A new record will be created in the external_members table with this name.\r\n        }\r\n    ]\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/27/externalmembers",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"27",
												"externalmembers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 13:43:50 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Group members updated successfully.\"\n}"
								},
								{
									"name": "200 OK (Update the name of the user that we just added)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"invitedExternalMembers\": [\r\n        {\r\n            \"externalMembersId\": \"47\",\r\n            \"name\": \"Test3\"\r\n        },\r\n        {\r\n            \"externalMembersId\": \"48\",\r\n            \"name\": \"Test2\"\r\n        },\r\n        {\r\n            \"externalMembersId\": \"49\",\r\n            \"name\": \"Test1\"\r\n        },\r\n        {\r\n            \"externalMembersId\": \"50\",\r\n            \"name\": \"NewNameForThisUser\" // The name of the existing external member with ID 50 will be updated.\r\n        }\r\n    ]\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/27/externalmembers",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"27",
												"externalmembers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 13:43:50 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Group members updated successfully.\"\n}"
								},
								{
									"name": "200 OK (Deleted the user that we just added)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"invitedExternalMembers\": [\r\n        {\r\n            \"externalMembersId\": \"47\",\r\n            \"name\": \"Test3\"\r\n        },\r\n        {\r\n            \"externalMembersId\": \"48\",\r\n            \"name\": \"Test2\"\r\n        },\r\n        {\r\n            \"externalMembersId\": \"49\",\r\n            \"name\": \"Test1\"\r\n        }\r\n\r\n         /* Since the recent created external member (NewUser) is not included in the request,\r\n          * it will be considered removed and deleted from the group.\r\n          \r\n        { \r\n            \"externalMembersId\": \"50\",    \r\n            \"name\": \"NewUser\"\r\n        } */\r\n    ]\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/27/externalmembers",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"27",
												"externalmembers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 14:10:55 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Group members updated successfully.\"\n}"
								},
								{
									"name": "400 Bad request (Name cant be blank)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"invitedExternalMembers\": [\r\n        {\r\n            \"externalMembersId\": \"47\",\r\n            \"name\": \"Test3\"\r\n        },\r\n        {\r\n            \"externalMembersId\": \"48\",\r\n            \"name\": \"Test2\"\r\n        },\r\n        {\r\n            \"externalMembersId\": \"56\"\r\n        },\r\n        {\r\n            \"externalMembersId\": \"55\",\r\n            \"name\": \"NewUser\"\r\n        } \r\n    ]\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/27/externalmembers",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"27",
												"externalmembers"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 14:24:37 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"invitedExternalMembers[2].externalMemberName: External member name must not be null\"\n    ],\n    \"message\": \"Some fields are invalid. Please check the inputs and try again.\",\n    \"status\": 400\n}"
								},
								{
									"name": "400 Bad request (Invalid endpoint input)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"invitedExternalMembers\": [\r\n        {\r\n            \"externalMembersId\": \"47\",\r\n            \"name\": \"Test3\"\r\n        },\r\n        {\r\n            \"externalMembersId\": \"48\",\r\n            \"name\": \"Test2\"\r\n        },\r\n        {\r\n            \"externalMembersId\": \"56\",\r\n            \"name\" : \"\"\r\n        },\r\n        {\r\n            \"externalMembersId\": \"55\",\r\n            \"name\": \"NewUser\"\r\n        } \r\n    ]\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/\"/externalmembers",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"\"",
												"externalmembers"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 14:27:58 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Invalid value '\\\"' for 'groupId'. Expected a 'Long'. Please check the endpoint and try again.\"\n    ],\n    \"message\": \"Invalid endpoint input detected. Ensure the parameter is correct and matches the expected format.\",\n    \"status\": 400\n}"
								},
								{
									"name": "403 Forbidden (No perrmisions to update)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"invitedExternalMembers\": [\r\n        {\r\n            \"externalMembersId\": \"6\",\r\n            \"name\": \"jose\"\r\n        },\r\n        {\r\n            \"name\": \"Paco\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/20/externalmembers",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"20",
												"externalmembers"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 13:41:28 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"User 27 has no permissions on the group 20\"\n    ],\n    \"message\": \"Only the group creator is authorized to perform this action.\",\n    \"status\": 403\n}"
								},
								{
									"name": "404 Not found (External Member not found)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"invitedExternalMembers\": [\r\n        {\r\n            \"externalMembersId\": \"42\",\r\n            \"name\": \"Test3\"\r\n        },\r\n        {\r\n            \"externalMembersId\": \"4\",\r\n            \"name\": \"Test2\"\r\n        },\r\n        {\r\n            \"externalMembersId\": \"42\",\r\n            \"name\": \"Test1\"\r\n        },\r\n        {\r\n            \"name\": \"NewUser\"\r\n        }\r\n    ]\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/27/externalmembers",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"27",
												"externalmembers"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 13:58:32 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"External member with ID 4 not found\"\n    ],\n    \"message\": \"One of the external members you tried to update no longer exists.\",\n    \"status\": 404\n}"
								},
								{
									"name": "404 Not found (Group not found)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"invitedExternalMembers\": [\r\n        {\r\n            \"externalMembersId\": \"6\",\r\n            \"name\": \"jose\"\r\n        },\r\n        {\r\n            \"name\": \"Paco\"\r\n        }\r\n    ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/1/externalmembers",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"1",
												"externalmembers"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 13:41:17 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Group with ID 1 not found.\"\n    ],\n    \"message\": \"Specified group doesn't exist.\",\n    \"status\": 404\n}"
								},
								{
									"name": "409 Conflict (Can't remove the creditor of the group)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "/*\r\n * Four cases are supported:\r\n * 1. Update: Provide externalMembersId + new name → updates the name of an existing member.\r\n * 2. Add: Provide only name → creates a new member with a generated ID.\r\n * 3. Keep: Provide externalMembersId + current name → keeps the existing member unchanged.\r\n * 4. Remove: Omit the member from the list → removes them from the group.\r\n */\r\n\r\n{\r\n    \"invitedExternalMembers\": [\r\n        /* // The group's creditor is not included in the request. This will trigger an exception.\r\n        {\r\n            \"externalMembersId\": \"182\",\r\n            \"name\": \"Tes123\"\r\n        } */\r\n        {\r\n            \"name\": \"Tes123\"\r\n        }\r\n    ]\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/52/externalmembers",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"52",
												"externalmembers"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 20:21:38 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"The creditor (Tes123) can't be removed from the group. Please assign another creditor first.\"\n    ],\n    \"message\": \"The creditor of the group can't leave or be kicked, please assign another creditor first.\",\n    \"status\": 409\n}"
								}
							]
						},
						{
							"name": "Delete Group by groupid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgzNTUwNDAsImV4cCI6MTc0ODM1ODY0MH0.ELfCauI345B-D3_riAQZefd3UajuFltp9OnKlg5arlV6H4FjSrhFpTqM1d5A9NTeYQAuTwk3WERhC-roQ-Z30g",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/groups/27",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"groups",
										"27"
									]
								},
								"description": "### **DELETE GROUP**\n\n`http://localhost:8080/api/groups/{groupId}`\n\nThis endpoint deletes a group by its ID.  \n  \nOnly the **group owner (creator)** is authorized to perform this action.\n\n### **Path Variable**\n\n- `groupId`: The unique identifier of the group to be deleted. Must be a valid number.\n    \n\n  \n\nStartFragment\n\n#### **Responses**\n\n| Status Code | Description | Example case (Postman) |\n| --- | --- | --- |\n| 200 OK | Group was successfully deleted | The group with the provided ID was removed from the system |\n| 400 Bad Request | Invalid input format or malformed endpoint | Provided `groupId` is not a valid number or format |\n| 403 Forbidden | User does not have permission to delete the group | The token belongs to a user who is not the creator of the group |\n| 404 Not Found | No group exists with the provided ID | Trying to delete a group that doesn’t exist in the database |"
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/27",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"27"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 14:45:51 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Group Test deleted successfully.\"\n}"
								},
								{
									"name": "400 Bad request (Invalid endpoint input)",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/\"",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"\""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 14:44:46 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Invalid value '\\\"' for 'groupId'. Expected a 'Long'. Please check the endpoint and try again.\"\n    ],\n    \"message\": \"Invalid endpoint input detected. Ensure the parameter is correct and matches the expected format.\",\n    \"status\": 400\n}"
								},
								{
									"name": "404 Not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/90",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"90"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 14:45:10 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Group with ID 90 not found.\"\n    ],\n    \"message\": \"Specified group doesn't exist.\",\n    \"status\": 404\n}"
								},
								{
									"name": "403 Forbidden (User has no permissions to delete)",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/groups/17",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"17"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 14:45:26 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"User 27 has no permissions on the group 17\"\n    ],\n    \"message\": \"Only the group creator is authorized to perform this action.\",\n    \"status\": 403\n}"
								}
							]
						},
						{
							"name": "Leave Group by groupid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MjA5NjU5ODY5IiwiaWF0IjoxNzQ4MzcyNDk0LCJleHAiOjE3NDgzNzYwOTR9.PKSAKgj-S8yqah7VQpJimCl4YiAocmDXp0Tmpcy7CxxRlhO2zpZG9ZSPzzyhuqNa_m4GkQ2h6WhY2-4hiGfpLQ",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/groups/46/leave",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"groups",
										"46",
										"leave"
									]
								},
								"description": "### **LEAVE GROUP BY GROUP\\`ID**\n\n`http://localhost:8080/api/groups/{groupId}/leave`\n\nAllows a registered user to leave a specific group.\n\nThis endpoint is only available to users who are registered members of the group\n\n### **Path Variable**\n\n- `groupId` (number): The unique identifier of the group to leave.\n    \n\n### **Functionality**\n\nWhen a registered member calls this endpoint:\n\n- If the user is currently a registered member and forms part of the group, he will be removed from the group.\n    \n- If the **group creator** calls this endpoint, the **entire group will be deleted** from the system.\n    \n\nNote: This logic for the creator is not yet supported in the frontend, as the \"Leave Group\" button is currently hidden for the group owner.\n\nFuture versions will include **creator delegation** before allowing the owner to leave.\n\n### **Responses**\n\n| Status Code | Description | Example case |\n| --- | --- | --- |\n| 200 OK | The user has successfully left the group | The user was a registered member of the group |\n| 400 Bad Request | Invalid input in the endpoint | `groupId` is not a valid number |\n| 404 Not Found | Group not found | No group exists with the specified ID |\n| 404 Not Found | User is not a registered member of the group | User's phone number is not listed among the group’s members |"
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/groups/26/leave",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"26",
												"leave"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 15:16:05 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"You have successfully left the group, and it has been deleted.\"\n}"
								},
								{
									"name": "400 Bad request (Invalid endpoint input)",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/groups/\"/leave",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"\"",
												"leave"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 15:15:00 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Invalid value '\\\"' for 'groupId'. Expected a 'Long'. Please check the endpoint and try again.\"\n    ],\n    \"message\": \"Invalid endpoint input detected. Ensure the parameter is correct and matches the expected format.\",\n    \"status\": 400\n}"
								},
								{
									"name": "404 Not found (Detects user is not in the group by the phone number)",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/groups/2/leave",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"2",
												"leave"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 15:14:30 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"User with phone 616689085 not found in the group\"\n    ],\n    \"message\": \"User does not exist.\",\n    \"status\": 404\n}"
								},
								{
									"name": "404 Not found (Group not found)",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/groups/299/leave",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"299",
												"leave"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 15:16:18 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Group with ID 299 not found.\"\n    ],\n    \"message\": \"Specified group doesn't exist.\",\n    \"status\": 404\n}"
								},
								{
									"name": "409 Conflict (Creditor can't leave)",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/groups/44/leave",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"groups",
												"44",
												"leave"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 18:59:27 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"The creditor (6209659869) can't leave the group. Please assign another creditor first.\"\n    ],\n    \"message\": \"The creditor of the group can't leave or be kicked, please assign another creditor first.\",\n    \"status\": 409\n}"
								}
							]
						}
					]
				},
				{
					"name": "Expenses",
					"item": [
						{
							"name": "Get Group Expenses by group id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgzODE1NjcsImV4cCI6MTc0ODM4NTE2N30.12dBz47jF7w-EOF_XLHwh3b0ibaktf-kDY3K8uipRQN9n8tb-0Uo88ZL84Hi_RALopf_FWlu5r-aJV1jMmasnA",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/expenses/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"expenses",
										"2"
									]
								},
								"description": "### WORKING IN PROGRESS\n\nThe business logic of this endpoint it's not implemented yet."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/expenses/2",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"expenses",
												"2"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 21:33:22 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": 2,\n        \"totalAmount\": 47,\n        \"groupId\": 2,\n        \"creditorUserId\": 5,\n        \"creditorExternalMemberId\": null,\n        \"registeredMembers\": [\n            {\n                \"amount\": 5.33,\n                \"creditorUserId\": 5,\n                \"debtorUserId\": 3\n            },\n            {\n                \"amount\": 8.33,\n                \"creditorUserId\": 5,\n                \"debtorUserId\": 4\n            },\n            {\n                \"amount\": 33.33,\n                \"creditorUserId\": 5,\n                \"debtorUserId\": 5\n            }\n        ],\n        \"externalMembers\": []\n    }\n]"
								},
								{
									"name": "400 Bad request (Invalid endpoint input)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/expenses/\"",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"expenses",
												"\""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 21:32:58 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Invalid value '{groupId}' for 'groupId'. Expected a 'Long'. Please check the endpoint and try again.\"\n    ],\n    \"message\": \"Invalid endpoint input detected. Ensure the parameter is correct and matches the expected format.\",\n    \"status\": 400\n}"
								},
								{
									"name": "404 Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/expenses/8",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"expenses",
												"8"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 21:33:38 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"No expenses found for group 8\"\n    ],\n    \"message\": \"Specified expense doesn't exist.\",\n    \"status\": 404\n}"
								}
							]
						},
						{
							"name": "Get total spent by user id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgzNzgxMzUsImV4cCI6MTc0ODM4MTczNX0.CtVjL4DQXhJay00-Q2sMHfPdLZMQQ27_45dbpVxQ-NHfzIc_sD4gFzg9Rb7k0PLeVXd8mofdarB4hjbrPrhHvQ",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/expenses/{userId}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"expenses",
										"{userId}"
									]
								}
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/expenses/52",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"expenses",
												"52"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 20:35:52 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": 52,\n        \"totalAmount\": 100,\n        \"groupId\": 52,\n        \"creditorUserId\": null,\n        \"creditorExternalMemberId\": 188,\n        \"registeredMembers\": [\n            {\n                \"amount\": 25,\n                \"creditorExternalMemberId\": 188,\n                \"debtorUserId\": 18\n            },\n            {\n                \"amount\": 25,\n                \"creditorExternalMemberId\": 188,\n                \"debtorUserId\": 30\n            },\n            {\n                \"amount\": 25,\n                \"creditorExternalMemberId\": 188,\n                \"debtorUserId\": 27\n            }\n        ],\n        \"externalMembers\": [\n            {\n                \"debtorExternalMemberId\": 188,\n                \"amount\": 25,\n                \"creditorExternalMemberId\": 188\n            }\n        ]\n    }\n]"
								},
								{
									"name": "400 Bad request (Invalid endpoint input)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/expenses/\"",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"expenses",
												"\""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 20:38:05 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Invalid value '\\\"' for 'groupId'. Expected a 'Long'. Please check the endpoint and try again.\"\n    ],\n    \"message\": \"Invalid endpoint input detected. Ensure the parameter is correct and matches the expected format.\",\n    \"status\": 400\n}"
								},
								{
									"name": "404 Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/expenses/29",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"expenses",
												"29"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 27 May 2025 20:38:24 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"No expenses found for group 29\"\n    ],\n    \"message\": \"Specified expense doesn't exist.\",\n    \"status\": 404\n}"
								}
							]
						},
						{
							"name": "WIP Get specific Expense by group",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/expenses/{groupId}/{expenseId}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"expenses",
										"{groupId}",
										"{expenseId}"
									]
								}
							},
							"response": []
						},
						{
							"name": "WIP Get specific Expense by group",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/expenses/{groupId}/{expenseId}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"expenses",
										"{groupId}",
										"{expenseId}"
									]
								}
							},
							"response": []
						},
						{
							"name": "WIP Create expense",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/expenses/{groupId}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"expenses",
										"{groupId}"
									]
								}
							},
							"response": []
						},
						{
							"name": "WIP Delete specific Expense by group",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/expenses/{groupId}/{expenseId}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"expenses",
										"{groupId}",
										"{expenseId}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Payment Confirmation",
					"item": [
						{
							"name": "Get pending payment confirmations by groupId (only isConfirmation == false)",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						},
						{
							"name": "List allUserExpenses by groupId",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						},
						{
							"name": "List userExpense by groupId (historial o para ver tus pendientes)",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						},
						{
							"name": "Request Confirmation (only registered member)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MDQzOTU1MzciLCJpYXQiOjE3NDc4Mzk0NjYsImV4cCI6MTc0Nzg0MzA2Nn0.4uz12SRHl3EZarRFKeqvhylQpq-2ZWhz49J4JEh8rNk1EJ-zofWQPwrBXMNJVM4FNUw_axqjvxsuXBrAvvIeIg",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userExpenseId\": 875,\r\n  \"confirmationAmount\": 5.0\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/payment-confirmations/confirm",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"payment-confirmations",
										"confirm"
									]
								}
							},
							"response": []
						},
						{
							"name": "Confirm Payment (only creator) Copy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MDQzOTU1MzciLCJpYXQiOjE3NDc4Mzk0NjYsImV4cCI6MTc0Nzg0MzA2Nn0.4uz12SRHl3EZarRFKeqvhylQpq-2ZWhz49J4JEh8rNk1EJ-zofWQPwrBXMNJVM4FNUw_axqjvxsuXBrAvvIeIg",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userExpenseId\": 875,\r\n  \"confirmationAmount\": 5.0\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/payment-confirmations/confirm",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"payment-confirmations",
										"confirm"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update payment confirmation to true by paymentConfirmationId",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/payments/confirm/17\n",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"payments",
										"confirm",
										"17\n"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Payment Confirmation by paymentConfirmationId",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/payment-confirmations/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"payment-confirmations",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Notification",
					"item": [
						{
							"name": "Get ALL READ notifications",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MDQzOTU1MzciLCJpYXQiOjE3NDgyMDc2MDUsImV4cCI6MTc0ODIxMTIwNX0.EWFphtbtiCWmWyzJodjNRsVuMIfs7_gq_q3ralbZREsnFxC-TCzKvdCvtLvvX4vbsqhxkjEgEnJp8F8P2Y0g7A",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/notifications",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"notifications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get ALL UNREAD notifications",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MDQzOTU1MzciLCJpYXQiOjE3NDgyMDc2MDUsImV4cCI6MTc0ODIxMTIwNX0.EWFphtbtiCWmWyzJodjNRsVuMIfs7_gq_q3ralbZREsnFxC-TCzKvdCvtLvvX4vbsqhxkjEgEnJp8F8P2Y0g7A",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/notifications/unread",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"notifications",
										"unread"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mark ONE notification",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MDQzOTU1MzciLCJpYXQiOjE3NDgyMDc2MDUsImV4cCI6MTc0ODIxMTIwNX0.EWFphtbtiCWmWyzJodjNRsVuMIfs7_gq_q3ralbZREsnFxC-TCzKvdCvtLvvX4vbsqhxkjEgEnJp8F8P2Y0g7A",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/notifications/6/read",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"notifications",
										"6",
										"read"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mark ALL notification",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MDQzOTU1MzciLCJpYXQiOjE3NDgyMDM5NDUsImV4cCI6MTc0ODIwNzU0NX0.eIV16XzWfdHhiSuvoL05xp8fN990YRVRzJJzuK_PeAvdb6EPSXp9JCXmQnWgLdDvxXa_CHihUm1SW6Gnc0ob8w",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/notifications/read-all",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"notifications",
										"read-all"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete ONE notification",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MDQzOTU1MzciLCJpYXQiOjE3NDgyMDc2MDUsImV4cCI6MTc0ODIxMTIwNX0.EWFphtbtiCWmWyzJodjNRsVuMIfs7_gq_q3ralbZREsnFxC-TCzKvdCvtLvvX4vbsqhxkjEgEnJp8F8P2Y0g7A",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/notifications/5",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"notifications",
										"5"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Password",
			"item": [
				{
					"name": "Profile Update password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MDM2OTYxNDQiLCJpYXQiOjE3NDY1NDI5MjYsImV4cCI6MTc0NjU0NjUyNn0.L3AW49MXGUIsVv94XYliJzeP4pEA4qPi7KiCq5gU8CIhYpux8KNhb8Ih1JSGDHEs4eyAGeJP16L4TOzR40JEWA",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"currentPassword\": \"\",\r\n  \"newPassword\": \"\",\r\n  \"confirmNewPassword\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/reset-password",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"reset-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Email Forgot password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\" : \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/forgot-password",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"forgot-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "[WWW] Update Forgot password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"newPassword\": \"\",\r\n    \"confirmNewPassword\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/forgot-password-reset",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"forgot-password-reset"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Fake Data",
			"item": [
				{
					"name": "User",
					"item": [
						{
							"name": "Fake User Data",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MTY2ODkwODUiLCJpYXQiOjE3NDgzNzE5NjgsImV4cCI6MTc0ODM3NTU2OH0.HPBicl3b9YbJGu5m0nWB8TsBd9mgxzR3CuJ8-3aKa7iVWEFeryxkHH41pp2_mTh9nAJjr4WN_SuStQXwHVfAdg",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/fake-data/users?count=1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"fake-data",
										"users"
									],
									"query": [
										{
											"key": "count",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete User Data",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/fake-data/clear-users",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"fake-data",
										"clear-users"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Groups",
					"item": [
						{
							"name": "Fake Group Data",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/fake-data/groups?count=1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"fake-data",
										"groups"
									],
									"query": [
										{
											"key": "count",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Group Data",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/fake-data/clear-groups",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"fake-data",
										"clear-groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fake Group Data",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/fake-data/groups?count=1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"fake-data",
										"groups"
									],
									"query": [
										{
											"key": "count",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Group Data",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/fake-data/clear-groups",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"fake-data",
										"clear-groups"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Database",
			"item": [
				{
					"name": "Users",
					"item": [
						{
							"name": "Truncate Users Table",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/db/reset-users",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"db",
										"reset-users"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Expenses",
					"item": [
						{
							"name": "Truncate Payment_Confirmation Table",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/db/reset-payment-confimations",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"db",
										"reset-payment-confimations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Truncate User_Expenses Table",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/db/reset-user-expenses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"db",
										"reset-user-expenses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Truncate Expenses Table",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/db/reset-expenses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"db",
										"reset-expenses"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Groups",
					"item": [
						{
							"name": "Truncate Group Members Table",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/db/reset-group-members",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"db",
										"reset-group-members"
									]
								}
							},
							"response": []
						},
						{
							"name": "Truncate External Members Table",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/db/reset-external-members",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"db",
										"reset-external-members"
									]
								}
							},
							"response": []
						},
						{
							"name": "Truncate Groups Table",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/db/reset-groups",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"db",
										"reset-groups"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}